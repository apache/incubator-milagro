"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4421],{5680:(e,t,a)=>{a.d(t,{xA:()=>m,yg:()=>o});var n=a(6540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function g(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var y=n.createContext({}),i=function(e){var t=n.useContext(y),a=t;return e&&(a="function"==typeof e?e(t):g(g({},t),e)),a},m=function(e){var t=i(e.components);return n.createElement(y.Provider,{value:t},e.children)},N="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,y=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),N=i(a),u=r,o=N["".concat(y,".").concat(u)]||N[u]||d[u]||l;return a?n.createElement(o,g(g({ref:t},m),{},{components:a})):n.createElement(o,g({ref:t},m))}));function o(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,g=new Array(l);g[0]=u;var p={};for(var y in t)hasOwnProperty.call(t,y)&&(p[y]=t[y]);p.originalType=e,p[N]="string"==typeof e?e:r,g[1]=p;for(var i=2;i<l;i++)g[i]=a[i];return n.createElement.apply(null,g)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},281:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>y,default:()=>o,frontMatter:()=>p,metadata:()=>i,toc:()=>N});var n=a(8168),r=a(8587),l=(a(6540),a(5680)),g=["components"],p={id:"mpin192",title:"MPIN192",sidebar_label:"MPIN192"},y=void 0,i={unversionedId:"cryptojs/mpin192",id:"cryptojs/mpin192",title:"MPIN192",description:"MPIN192",source:"@site/../docs/cryptojs/mpin192.md",sourceDirName:"cryptojs",slug:"/cryptojs/mpin192",permalink:"/docs/cryptojs/mpin192",draft:!1,tags:[],version:"current",frontMatter:{id:"mpin192",title:"MPIN192",sidebar_label:"MPIN192"},sidebar:"docs",previous:{title:"MPIN",permalink:"/docs/cryptojs/mpin"},next:{title:"MPIN256",permalink:"/docs/cryptojs/mpin256"}},m={},N=[{value:"MPIN192",id:"mpin192",level:2},{value:"new MPIN192()",id:"new-mpin192",level:3},{value:"MPIN192.today() \u21d2",id:"mpin192today-",level:3},{value:"MPIN192.bytestostring(b) \u21d2",id:"mpin192bytestostringb-",level:3},{value:"MPIN192.stringtobytes(s) \u21d2",id:"mpin192stringtobytess-",level:3},{value:"MPIN192.comparebytes(a, b) \u21d2",id:"mpin192comparebytesa-b-",level:3},{value:"MPIN192.mpin_hash(c, U) \u21d2",id:"mpin192mpin_hashc-u-",level:3},{value:"MPIN192.hashit(sha, n, B) \u21d2",id:"mpin192hashitsha-n-b-",level:3},{value:"MPIN192.map(u, cb) \u21d2",id:"mpin192mapu-cb-",level:3},{value:"MPIN192.unmap(u, P) \u21d2",id:"mpin192unmapu-p-",level:3},{value:"MPIN192.RECOMBINE_G1(R1, R2, R) \u21d2",id:"mpin192recombine_g1r1-r2-r-",level:3},{value:"MPIN192.RECOMBINE_G2(W1, W2, W) \u21d2",id:"mpin192recombine_g2w1-w2-w-",level:3},{value:"MPIN192.HASH_ID(sha, ID) \u21d2",id:"mpin192hash_idsha-id-",level:3},{value:"MPIN192.RANDOM_GENERATE(rng, S) \u21d2",id:"mpin192random_generaterng-s-",level:3},{value:"MPIN192.EXTRACT_PIN() \u21d2",id:"mpin192extract_pin-",level:3},{value:"MPIN192.EXTRACT_FACTOR() \u21d2",id:"mpin192extract_factor-",level:3},{value:"MPIN192.RESTORE_FACTOR() \u21d2",id:"mpin192restore_factor-",level:3},{value:"MPIN192.GET_SERVER_SECRET(S, SST) \u21d2",id:"mpin192get_server_secrets-sst-",level:3},{value:"MPIN192.GET_G1_MULTIPLE(type, x, G, W) \u21d2",id:"mpin192get_g1_multipletype-x-g-w-",level:3},{value:"MPIN192.GET_CLIENT_SECRET(S, CID, CST) \u21d2",id:"mpin192get_client_secrets-cid-cst-",level:3},{value:"MPIN192.GET_CLIENT_PERMIT(sha, date, S, CID, CTT) \u21d2",id:"mpin192get_client_permitsha-date-s-cid-ctt-",level:3},{value:"MPIN192.CLIENT_1(sha, date, CLIENT_ID, rng, X, pin, TOKEN, SEC, xID, xCID, PERMIT) \u21d2",id:"mpin192client_1sha-date-client_id-rng-x-pin-token-sec-xid-xcid-permit-",level:3},{value:"MPIN192.CLIENT_2(X, Y, SEC) \u21d2",id:"mpin192client_2x-y-sec-",level:3},{value:"MPIN192.SERVER_1(sha, date, CID, HID, HTID) \u21d2",id:"mpin192server_1sha-date-cid-hid-htid-",level:3},{value:"MPIN192.SERVER_2(date, HID, HTID, Y, SST, xID, xCID, mSEC, E, F, Pa) \u21d2",id:"mpin192server_2date-hid-htid-y-sst-xid-xcid-msec-e-f-pa-",level:3},{value:"MPIN192.KANGAROO(E, F) \u21d2",id:"mpin192kangarooe-f-",level:3},{value:"MPIN192.GET_TIME() \u21d2",id:"mpin192get_time-",level:3},{value:"MPIN192.GET_Y(sha, TimeValue, xCID, Y) \u21d2",id:"mpin192get_ysha-timevalue-xcid-y-",level:3},{value:"MPIN192.CLIENT(sha, date, CLIENT_ID, rng, X, pin, TOKEN, SEC, xID, xCID, PERMIT, TimeValue, Y, Message) \u21d2",id:"mpin192clientsha-date-client_id-rng-x-pin-token-sec-xid-xcid-permit-timevalue-y-message-",level:3},{value:"MPIN192.SERVER(sha, date, HID, HTID, Y, SST, xID, xCID, mSEC, E, F, CID, TimeValue, MESSAGE, Pa) \u21d2",id:"mpin192serversha-date-hid-htid-y-sst-xid-xcid-msec-e-f-cid-timevalue-message-pa-",level:3},{value:"MPIN192.PRECOMPUTE(TOKEN, CID, G1, G2) \u21d2",id:"mpin192precomputetoken-cid-g1-g2-",level:3},{value:"MPIN192.HASH_ALL(sha, HID, xID, xCID, SEC, Y, R, W) \u21d2",id:"mpin192hash_allsha-hid-xid-xcid-sec-y-r-w-",level:3},{value:"MPIN192.CLIENT_KEY(sha, G1, G2, pin, R, X, H, wCID, CK) \u21d2",id:"mpin192client_keysha-g1-g2-pin-r-x-h-wcid-ck-",level:3},{value:"MPIN192.SERVER_KEY(h, Z, SST, W, H, HID, xID, xCID, SK) \u21d2",id:"mpin192server_keyh-z-sst-w-h-hid-xid-xcid-sk-",level:3},{value:"MPIN192.GET_DVS_KEYPAIR(rng, Z, Pa) \u21d2",id:"mpin192get_dvs_keypairrng-z-pa-",level:3}],d={toc:N},u="wrapper";function o(e){var t=e.components,a=(0,r.A)(e,g);return(0,l.yg)(u,(0,n.A)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,l.yg)("a",{name:"MPIN192"}),(0,l.yg)("h2",{id:"mpin192"},"MPIN192"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": global class",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}MPIN192{"}"}'),"  "),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#MPIN192"},"MPIN192"),(0,l.yg)("ul",{parentName:"li"},(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#new_MPIN192_new"},"new MPIN192()")),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#MPIN192.today"},".today()")," \u21d2"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#MPIN192.bytestostring"},".bytestostring(b)")," \u21d2"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#MPIN192.stringtobytes"},".stringtobytes(s)")," \u21d2"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#MPIN192.comparebytes"},".comparebytes(a, b)")," \u21d2"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#MPIN192.mpin_hash"},".mpin_hash(c, U)")," \u21d2"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#MPIN192.hashit"},".hashit(sha, n, B)")," \u21d2"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#MPIN192.map"},".map(u, cb)")," \u21d2"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#MPIN192.unmap"},".unmap(u, P)")," \u21d2"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#MPIN192.RECOMBINE_G1"},".RECOMBINE_G1(R1, R2, R)")," \u21d2"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#MPIN192.RECOMBINE_G2"},".RECOMBINE_G2(W1, W2, W)")," \u21d2"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#MPIN192.HASH_ID"},".HASH_ID(sha, ID)")," \u21d2"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#MPIN192.RANDOM_GENERATE"},".RANDOM_GENERATE(rng, S)")," \u21d2"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#MPIN192.EXTRACT_PIN"},".EXTRACT_PIN()")," \u21d2"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#MPIN192.EXTRACT_FACTOR"},".EXTRACT_FACTOR()")," \u21d2"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#MPIN192.RESTORE_FACTOR"},".RESTORE_FACTOR()")," \u21d2"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#MPIN192.GET_SERVER_SECRET"},".GET_SERVER_SECRET(S, SST)")," \u21d2"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#MPIN192.GET_G1_MULTIPLE"},".GET_G1_MULTIPLE(type, x, G, W)")," \u21d2"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#MPIN192.GET_CLIENT_SECRET"},".GET_CLIENT_SECRET(S, CID, CST)")," \u21d2"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#MPIN192.GET_CLIENT_PERMIT"},".GET_CLIENT_PERMIT(sha, date, S, CID, CTT)")," \u21d2"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#MPIN192.CLIENT_1"},".CLIENT_1(sha, date, CLIENT_ID, rng, X, pin, TOKEN, SEC, xID, xCID, PERMIT)")," \u21d2"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#MPIN192.CLIENT_2"},".CLIENT_2(X, Y, SEC)")," \u21d2"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#MPIN192.SERVER_1"},".SERVER_1(sha, date, CID, HID, HTID)")," \u21d2"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#MPIN192.SERVER_2"},".SERVER_2(date, HID, HTID, Y, SST, xID, xCID, mSEC, E, F, Pa)")," \u21d2"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#MPIN192.KANGAROO"},".KANGAROO(E, F)")," \u21d2"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#MPIN192.GET_TIME"},".GET_TIME()")," \u21d2"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#MPIN192.GET_Y"},".GET_Y(sha, TimeValue, xCID, Y)")," \u21d2"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#MPIN192.CLIENT"},".CLIENT(sha, date, CLIENT_ID, rng, X, pin, TOKEN, SEC, xID, xCID, PERMIT, TimeValue, Y, Message)")," \u21d2"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#MPIN192.SERVER"},".SERVER(sha, date, HID, HTID, Y, SST, xID, xCID, mSEC, E, F, CID, TimeValue, MESSAGE, Pa)")," \u21d2"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#MPIN192.PRECOMPUTE"},".PRECOMPUTE(TOKEN, CID, G1, G2)")," \u21d2"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#MPIN192.HASH_ALL"},".HASH_ALL(sha, HID, xID, xCID, SEC, Y, R, W)")," \u21d2"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#MPIN192.CLIENT_KEY"},".CLIENT_KEY(sha, G1, G2, pin, R, X, H, wCID, CK)")," \u21d2"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#MPIN192.SERVER_KEY"},".SERVER_KEY(h, Z, SST, W, H, HID, xID, xCID, SK)")," \u21d2"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#MPIN192.GET_DVS_KEYPAIR"},".GET_DVS_KEYPAIR(rng, Z, Pa)")," \u21d2")))),(0,l.yg)("a",{name:"new_MPIN192_new"}),(0,l.yg)("h3",{id:"new-mpin192"},"new MPIN192()"),(0,l.yg)("p",null,"Creates an instance of MPIN192"),(0,l.yg)("a",{name:"MPIN192.today"}),(0,l.yg)("h3",{id:"mpin192today-"},"MPIN192.today() \u21d2"),(0,l.yg)("p",null,"Get epoch time"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.yg)("a",{parentName:"p",href:"#MPIN192"},(0,l.yg)("code",null,"MPIN192")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Returns"),": time in slots since epoch",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}MPIN192{"}"}'),"  "),(0,l.yg)("a",{name:"MPIN192.bytestostring"}),(0,l.yg)("h3",{id:"mpin192bytestostringb-"},"MPIN192.bytestostring(b) \u21d2"),(0,l.yg)("p",null,"Convert byte array to string"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.yg)("a",{parentName:"p",href:"#MPIN192"},(0,l.yg)("code",null,"MPIN192")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Returns"),": s string",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}MPIN192{"}"}'),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"b"),(0,l.yg)("td",{parentName:"tr",align:null},"byte array")))),(0,l.yg)("a",{name:"MPIN192.stringtobytes"}),(0,l.yg)("h3",{id:"mpin192stringtobytess-"},"MPIN192.stringtobytes(s) \u21d2"),(0,l.yg)("p",null,"Convert a string to byte array"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.yg)("a",{parentName:"p",href:"#MPIN192"},(0,l.yg)("code",null,"MPIN192")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Returns"),": b byte array",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}MPIN192{"}"}'),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"s"),(0,l.yg)("td",{parentName:"tr",align:null},"string")))),(0,l.yg)("a",{name:"MPIN192.comparebytes"}),(0,l.yg)("h3",{id:"mpin192comparebytesa-b-"},"MPIN192.comparebytes(a, b) \u21d2"),(0,l.yg)("p",null,"Convert byte arrays"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.yg)("a",{parentName:"p",href:"#MPIN192"},(0,l.yg)("code",null,"MPIN192")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Returns"),": true if equal",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}MPIN192{"}"}'),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"a"),(0,l.yg)("td",{parentName:"tr",align:null},"byte array")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"b"),(0,l.yg)("td",{parentName:"tr",align:null},"byte array")))),(0,l.yg)("a",{name:"MPIN192.mpin_hash"}),(0,l.yg)("h3",{id:"mpin192mpin_hashc-u-"},"MPIN192.mpin_hash(c, U) \u21d2"),(0,l.yg)("p",null,"Hash values"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.yg)("a",{parentName:"p",href:"#MPIN192"},(0,l.yg)("code",null,"MPIN192")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Returns"),": R hash value",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}MPIN192{"}"}'),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"c"),(0,l.yg)("td",{parentName:"tr",align:null},"FP8 instance")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"U"),(0,l.yg)("td",{parentName:"tr",align:null},"ECP unstancebyte array")))),(0,l.yg)("a",{name:"MPIN192.hashit"}),(0,l.yg)("h3",{id:"mpin192hashitsha-n-b-"},"MPIN192.hashit(sha, n, B) \u21d2"),(0,l.yg)("p",null,"General purpose hash function"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.yg)("a",{parentName:"p",href:"#MPIN192"},(0,l.yg)("code",null,"MPIN192")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Returns"),": R hash value",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}MPIN192{"}"}'),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"sha"),(0,l.yg)("td",{parentName:"tr",align:null},"is the hash type")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"n"),(0,l.yg)("td",{parentName:"tr",align:null},"Integer")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"B"),(0,l.yg)("td",{parentName:"tr",align:null},"byte array")))),(0,l.yg)("a",{name:"MPIN192.map"}),(0,l.yg)("h3",{id:"mpin192mapu-cb-"},"MPIN192.map(u, cb) \u21d2"),(0,l.yg)("p",null,"maps a random u to a point on the curve"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.yg)("a",{parentName:"p",href:"#MPIN192"},(0,l.yg)("code",null,"MPIN192")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Returns"),": P ECP pointhash value",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}MPIN192{"}"}'),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"u"),(0,l.yg)("td",{parentName:"tr",align:null},"BIG numberInteger")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"cb"),(0,l.yg)("td",{parentName:"tr",align:null},'an integer representing the "sign" of y, in fact its least significant bit.')))),(0,l.yg)("a",{name:"MPIN192.unmap"}),(0,l.yg)("h3",{id:"mpin192unmapu-p-"},"MPIN192.unmap(u, P) \u21d2"),(0,l.yg)("p",null,"returns u derived from P. Random value in range 1 to return value should then be added to u"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.yg)("a",{parentName:"p",href:"#MPIN192"},(0,l.yg)("code",null,"MPIN192")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Returns"),": r Value that should be added to u to derive P",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}MPIN192{"}"}'),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"u"),(0,l.yg)("td",{parentName:"tr",align:null},"BIG numberInteger")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"P"),(0,l.yg)("td",{parentName:"tr",align:null},"ECP pointhash value")))),(0,l.yg)("a",{name:"MPIN192.RECOMBINE_G1"}),(0,l.yg)("h3",{id:"mpin192recombine_g1r1-r2-r-"},"MPIN192.RECOMBINE_G1(R1, R2, R) \u21d2"),(0,l.yg)("p",null,"Add two members from the group G1"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.yg)("a",{parentName:"p",href:"#MPIN192"},(0,l.yg)("code",null,"MPIN192")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Returns"),": 0 or an error code",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}MPIN192{"}"}'),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"R1"),(0,l.yg)("td",{parentName:"tr",align:null},"Input member of G1")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"R2"),(0,l.yg)("td",{parentName:"tr",align:null},"Input member of G1")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"R"),(0,l.yg)("td",{parentName:"tr",align:null},"Output member of G1. R=R1+R2")))),(0,l.yg)("a",{name:"MPIN192.RECOMBINE_G2"}),(0,l.yg)("h3",{id:"mpin192recombine_g2w1-w2-w-"},"MPIN192.RECOMBINE_G2(W1, W2, W) \u21d2"),(0,l.yg)("p",null,"Add two members from the group G2"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.yg)("a",{parentName:"p",href:"#MPIN192"},(0,l.yg)("code",null,"MPIN192")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Returns"),": 0 or an error code",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}MPIN192{"}"}'),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"W1"),(0,l.yg)("td",{parentName:"tr",align:null},"Input member of G2")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"W2"),(0,l.yg)("td",{parentName:"tr",align:null},"Input member of G2")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"W"),(0,l.yg)("td",{parentName:"tr",align:null},"Output member of G2. W=W1+W2")))),(0,l.yg)("a",{name:"MPIN192.HASH_ID"}),(0,l.yg)("h3",{id:"mpin192hash_idsha-id-"},"MPIN192.HASH_ID(sha, ID) \u21d2"),(0,l.yg)("p",null,"Hash the identity"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.yg)("a",{parentName:"p",href:"#MPIN192"},(0,l.yg)("code",null,"MPIN192")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Returns"),": hash value",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}MPIN192{"}"}'),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"sha"),(0,l.yg)("td",{parentName:"tr",align:null},"is the hash type")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"ID"),(0,l.yg)("td",{parentName:"tr",align:null},"Identity as byte array")))),(0,l.yg)("a",{name:"MPIN192.RANDOM_GENERATE"}),(0,l.yg)("h3",{id:"mpin192random_generaterng-s-"},"MPIN192.RANDOM_GENERATE(rng, S) \u21d2"),(0,l.yg)("p",null,"Create random secret"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.yg)("a",{parentName:"p",href:"#MPIN192"},(0,l.yg)("code",null,"MPIN192")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Returns"),": O for success or else error code",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}MPIN192{"}"}'),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"rng"),(0,l.yg)("td",{parentName:"tr",align:null},"cryptographically secure random number generator")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"S"),(0,l.yg)("td",{parentName:"tr",align:null},"Random secret value")))),(0,l.yg)("a",{name:"MPIN192.EXTRACT_PIN"}),(0,l.yg)("h3",{id:"mpin192extract_pin-"},"MPIN192.EXTRACT_PIN() \u21d2"),(0,l.yg)("p",null,"Extract a PIN number from a client secret"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.yg)("a",{parentName:"p",href:"#MPIN192"},(0,l.yg)("code",null,"MPIN192")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Returns"),": token",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}MPIN192{"}"}'),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Parameter"),": sha hash type",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Parameter"),": CID Client identity",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Parameter"),": pin PIN value",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Parameter"),": TOKEN Client secret  "),(0,l.yg)("a",{name:"MPIN192.EXTRACT_FACTOR"}),(0,l.yg)("h3",{id:"mpin192extract_factor-"},"MPIN192.EXTRACT_FACTOR() \u21d2"),(0,l.yg)("p",null,"Extract factor from TOKEN for identity CID"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.yg)("a",{parentName:"p",href:"#MPIN192"},(0,l.yg)("code",null,"MPIN192")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Returns"),": token",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}MPIN192{"}"}'),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Parameter"),": sha hash type",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Parameter"),": CID Client identity",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Parameter"),": factor Value to extract",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Parameter"),": facbits Number of bits in factor",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Parameter"),": TOKEN Token value  "),(0,l.yg)("a",{name:"MPIN192.RESTORE_FACTOR"}),(0,l.yg)("h3",{id:"mpin192restore_factor-"},"MPIN192.RESTORE_FACTOR() \u21d2"),(0,l.yg)("p",null,"Restore factor to TOKEN for identity CID"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.yg)("a",{parentName:"p",href:"#MPIN192"},(0,l.yg)("code",null,"MPIN192")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Returns"),": token",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}MPIN192{"}"}'),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Parameter"),": sha hash type",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Parameter"),": CID Client identity",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Parameter"),": factor Value to extract",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Parameter"),": facbits Number of bits in factor",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Parameter"),": TOKEN Token value  "),(0,l.yg)("a",{name:"MPIN192.GET_SERVER_SECRET"}),(0,l.yg)("h3",{id:"mpin192get_server_secrets-sst-"},"MPIN192.GET_SERVER_SECRET(S, SST) \u21d2"),(0,l.yg)("p",null,"Create a server secret in G2 from a master secret"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.yg)("a",{parentName:"p",href:"#MPIN192"},(0,l.yg)("code",null,"MPIN192")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Returns"),": O for success or else error code",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}MPIN192{"}"}'),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"S"),(0,l.yg)("td",{parentName:"tr",align:null},"Master secret")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"SST"),(0,l.yg)("td",{parentName:"tr",align:null},"Server secret = s.Q where Q is a fixed generator of G2")))),(0,l.yg)("a",{name:"MPIN192.GET_G1_MULTIPLE"}),(0,l.yg)("h3",{id:"mpin192get_g1_multipletype-x-g-w-"},"MPIN192.GET_G1_MULTIPLE(type, x, G, W) \u21d2"),(0,l.yg)("p",null,"Find a random multiple of a point in G1"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.yg)("a",{parentName:"p",href:"#MPIN192"},(0,l.yg)("code",null,"MPIN192")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Returns"),": O for success or else error code",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}MPIN192{"}"}'),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Parameter"),": rng cryptographically secure random number generator  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"type"),(0,l.yg)("td",{parentName:"tr",align:null},"determines type of action to be taken")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"x"),(0,l.yg)("td",{parentName:"tr",align:null},"an output internally randomly generated if R!=NULL, otherwise must be provided as an input")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"G"),(0,l.yg)("td",{parentName:"tr",align:null},"if type=0 a point in G1, else an octet to be mapped to G1")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"W"),(0,l.yg)("td",{parentName:"tr",align:null},"the output =x.G or x.M(G), where M(.) is a mapping")))),(0,l.yg)("a",{name:"MPIN192.GET_CLIENT_SECRET"}),(0,l.yg)("h3",{id:"mpin192get_client_secrets-cid-cst-"},"MPIN192.GET_CLIENT_SECRET(S, CID, CST) \u21d2"),(0,l.yg)("p",null,"Create a client secret in G1 from a master secret and the client ID"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.yg)("a",{parentName:"p",href:"#MPIN192"},(0,l.yg)("code",null,"MPIN192")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Returns"),": O for success or else error code",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}MPIN192{"}"}'),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"S"),(0,l.yg)("td",{parentName:"tr",align:null},"is an input master secret")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"CID"),(0,l.yg)("td",{parentName:"tr",align:null},"is the input client identity")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"CST"),(0,l.yg)("td",{parentName:"tr",align:null},"is the full client secret = s.H(ID)")))),(0,l.yg)("a",{name:"MPIN192.GET_CLIENT_PERMIT"}),(0,l.yg)("h3",{id:"mpin192get_client_permitsha-date-s-cid-ctt-"},"MPIN192.GET_CLIENT_PERMIT(sha, date, S, CID, CTT) \u21d2"),(0,l.yg)("p",null,"Create a Time Permit in G1 from a master secret and the client ID"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.yg)("a",{parentName:"p",href:"#MPIN192"},(0,l.yg)("code",null,"MPIN192")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Returns"),": O for success or else error code",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}MPIN192{"}"}'),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"),(0,l.yg)("th",{parentName:"tr",align:null}))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"sha"),(0,l.yg)("td",{parentName:"tr",align:null},"is the hash type"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"date"),(0,l.yg)("td",{parentName:"tr",align:null},"is input date, in days since the epoch."),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"S"),(0,l.yg)("td",{parentName:"tr",align:null},"is an input master secret"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"CID"),(0,l.yg)("td",{parentName:"tr",align:null},"is the input client identity"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"CTT"),(0,l.yg)("td",{parentName:"tr",align:null},"is a Time Permit for the given date = s.H(d"),(0,l.yg)("td",{parentName:"tr",align:null},"H(ID))")))),(0,l.yg)("a",{name:"MPIN192.CLIENT_1"}),(0,l.yg)("h3",{id:"mpin192client_1sha-date-client_id-rng-x-pin-token-sec-xid-xcid-permit-"},"MPIN192.CLIENT_1(sha, date, CLIENT_ID, rng, X, pin, TOKEN, SEC, xID, xCID, PERMIT) \u21d2"),(0,l.yg)("p",null,"Perform first pass of the client side of the 3-pass version of the M-Pin protocol"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.yg)("a",{parentName:"p",href:"#MPIN192"},(0,l.yg)("code",null,"MPIN192")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Returns"),": O for success or else error code",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}MPIN192{"}"}'),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"),(0,l.yg)("th",{parentName:"tr",align:null}))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"sha"),(0,l.yg)("td",{parentName:"tr",align:null},"is the hash type"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"date"),(0,l.yg)("td",{parentName:"tr",align:null},"is input date, in days since the epoch. Set to 0 if Time permits disabled"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"CLIENT_ID"),(0,l.yg)("td",{parentName:"tr",align:null},"is the input client identity"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"rng"),(0,l.yg)("td",{parentName:"tr",align:null},"is a pointer to a cryptographically secure random number generator"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"X"),(0,l.yg)("td",{parentName:"tr",align:null},"an output internally randomly generated if R!=NULL, otherwise must be provided as an input"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"pin"),(0,l.yg)("td",{parentName:"tr",align:null},"is the input PIN number"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"TOKEN"),(0,l.yg)("td",{parentName:"tr",align:null},"is the input M-Pin token (the client secret with PIN portion removed)"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"SEC"),(0,l.yg)("td",{parentName:"tr",align:null},"is output = CS+TP, where CS=is the reconstructed client secret, and TP is the time permit"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"xID"),(0,l.yg)("td",{parentName:"tr",align:null},"is output = x.H(ID)"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"xCID"),(0,l.yg)("td",{parentName:"tr",align:null},"is output = x.(H(ID)+H(d"),(0,l.yg)("td",{parentName:"tr",align:null},"H(ID)))")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"PERMIT"),(0,l.yg)("td",{parentName:"tr",align:null},"is the input time permit"),(0,l.yg)("td",{parentName:"tr",align:null})))),(0,l.yg)("a",{name:"MPIN192.CLIENT_2"}),(0,l.yg)("h3",{id:"mpin192client_2x-y-sec-"},"MPIN192.CLIENT_2(X, Y, SEC) \u21d2"),(0,l.yg)("p",null,"Perform second pass of the client side of the 3-pass version of the M-Pin protocol"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.yg)("a",{parentName:"p",href:"#MPIN192"},(0,l.yg)("code",null,"MPIN192")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Returns"),": O for success or else error code",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}MPIN192{"}"}'),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"X"),(0,l.yg)("td",{parentName:"tr",align:null},"an input, a locally generated random number")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"Y"),(0,l.yg)("td",{parentName:"tr",align:null},"an input random challenge from the server")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"SEC"),(0,l.yg)("td",{parentName:"tr",align:null},"on output = -(x+y).V")))),(0,l.yg)("a",{name:"MPIN192.SERVER_1"}),(0,l.yg)("h3",{id:"mpin192server_1sha-date-cid-hid-htid-"},"MPIN192.SERVER_1(sha, date, CID, HID, HTID) \u21d2"),(0,l.yg)("p",null,"Perform first pass of the server side of the 3-pass version of the M-Pin protocol"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.yg)("a",{parentName:"p",href:"#MPIN192"},(0,l.yg)("code",null,"MPIN192")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Returns"),": O for success or else error code",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}MPIN192{"}"}'),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"),(0,l.yg)("th",{parentName:"tr",align:null}))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"sha"),(0,l.yg)("td",{parentName:"tr",align:null},"is the hash type"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"date"),(0,l.yg)("td",{parentName:"tr",align:null},"is input date, in days since the epoch. Set to 0 if Time permits disabled"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"CID"),(0,l.yg)("td",{parentName:"tr",align:null},"is the input claimed client identity"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"HID"),(0,l.yg)("td",{parentName:"tr",align:null},"is output H(ID), a hash of the client ID"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"HTID"),(0,l.yg)("td",{parentName:"tr",align:null},"is output H(ID)+H(d"),(0,l.yg)("td",{parentName:"tr",align:null},"H(ID))")))),(0,l.yg)("a",{name:"MPIN192.SERVER_2"}),(0,l.yg)("h3",{id:"mpin192server_2date-hid-htid-y-sst-xid-xcid-msec-e-f-pa-"},"MPIN192.SERVER_2(date, HID, HTID, Y, SST, xID, xCID, mSEC, E, F, Pa) \u21d2"),(0,l.yg)("p",null,"Perform third pass on the server side of the 3-pass version of the M-Pin protocol"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.yg)("a",{parentName:"p",href:"#MPIN192"},(0,l.yg)("code",null,"MPIN192")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Returns"),": O for success or else error code",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}MPIN192{"}"}'),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"),(0,l.yg)("th",{parentName:"tr",align:null}))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"date"),(0,l.yg)("td",{parentName:"tr",align:null},"is input date, in days since the epoch. Set to 0 if Time permits disabled"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"HID"),(0,l.yg)("td",{parentName:"tr",align:null},"is input H(ID), a hash of the client ID"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"HTID"),(0,l.yg)("td",{parentName:"tr",align:null},"is input H(ID)+H(d"),(0,l.yg)("td",{parentName:"tr",align:null},"H(ID))")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"Y"),(0,l.yg)("td",{parentName:"tr",align:null},"is the input server's randomly generated challenge"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"SST"),(0,l.yg)("td",{parentName:"tr",align:null},"is the input server secret"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"xID"),(0,l.yg)("td",{parentName:"tr",align:null},"is input from the client = x.H(ID)"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"xCID"),(0,l.yg)("td",{parentName:"tr",align:null},"is input from the client= x.(H(ID)+H(d"),(0,l.yg)("td",{parentName:"tr",align:null},"H(ID)))")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"mSEC"),(0,l.yg)("td",{parentName:"tr",align:null},"is an input from the client"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"E"),(0,l.yg)("td",{parentName:"tr",align:null},"is an output to help the Kangaroos to find the PIN error, or NULL if not required"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"F"),(0,l.yg)("td",{parentName:"tr",align:null},"is an output to help the Kangaroos to find the PIN error, or NULL if not required"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"Pa"),(0,l.yg)("td",{parentName:"tr",align:null},"is the input public key from the client, z.Q or NULL if the client uses regular mpin"),(0,l.yg)("td",{parentName:"tr",align:null})))),(0,l.yg)("a",{name:"MPIN192.KANGAROO"}),(0,l.yg)("h3",{id:"mpin192kangarooe-f-"},"MPIN192.KANGAROO(E, F) \u21d2"),(0,l.yg)("p",null,"Use Kangaroos to find PIN error"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.yg)("a",{parentName:"p",href:"#MPIN192"},(0,l.yg)("code",null,"MPIN192")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Returns"),": 0 if Kangaroos failed, or the PIN error e",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}MPIN192{"}"}'),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"E"),(0,l.yg)("td",{parentName:"tr",align:null},"a member of the group GT")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"F"),(0,l.yg)("td",{parentName:"tr",align:null},"a member of the group GT =  E^e")))),(0,l.yg)("a",{name:"MPIN192.GET_TIME"}),(0,l.yg)("h3",{id:"mpin192get_time-"},"MPIN192.GET_TIME() \u21d2"),(0,l.yg)("p",null,"Time since epoch"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.yg)("a",{parentName:"p",href:"#MPIN192"},(0,l.yg)("code",null,"MPIN192")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Returns"),": time since epoch",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}MPIN192{"}"}'),"  "),(0,l.yg)("a",{name:"MPIN192.GET_Y"}),(0,l.yg)("h3",{id:"mpin192get_ysha-timevalue-xcid-y-"},"MPIN192.GET_Y(sha, TimeValue, xCID, Y) \u21d2"),(0,l.yg)("p",null,"Generate Y=H(s,O), where s is epoch time, O is a byte array, and H(.) is a hash function"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.yg)("a",{parentName:"p",href:"#MPIN192"},(0,l.yg)("code",null,"MPIN192")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Returns"),": O for success or else error code",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}MPIN192{"}"}'),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"sha"),(0,l.yg)("td",{parentName:"tr",align:null},"is the hash type")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"TimeValue"),(0,l.yg)("td",{parentName:"tr",align:null},"is epoch time in seconds")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"xCID"),(0,l.yg)("td",{parentName:"tr",align:null},"input bytearray is an input octet")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"Y"),(0,l.yg)("td",{parentName:"tr",align:null},"output value")))),(0,l.yg)("a",{name:"MPIN192.CLIENT"}),(0,l.yg)("h3",{id:"mpin192clientsha-date-client_id-rng-x-pin-token-sec-xid-xcid-permit-timevalue-y-message-"},"MPIN192.CLIENT(sha, date, CLIENT_ID, rng, X, pin, TOKEN, SEC, xID, xCID, PERMIT, TimeValue, Y, Message) \u21d2"),(0,l.yg)("p",null,"Perform client side of the one-pass version of the M-Pin protocol"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.yg)("a",{parentName:"p",href:"#MPIN192"},(0,l.yg)("code",null,"MPIN192")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Returns"),": O for success or else error code",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}MPIN192{"}"}'),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"),(0,l.yg)("th",{parentName:"tr",align:null}),(0,l.yg)("th",{parentName:"tr",align:null}))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"sha"),(0,l.yg)("td",{parentName:"tr",align:null},"is the hash type"),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"date"),(0,l.yg)("td",{parentName:"tr",align:null},"is input date, in days since the epoch. Set to 0 if Time permits disabled"),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"CLIENT_ID"),(0,l.yg)("td",{parentName:"tr",align:null},"is the input client identity"),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"rng"),(0,l.yg)("td",{parentName:"tr",align:null},"is a pointer to a cryptographically secure random number generator"),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"X"),(0,l.yg)("td",{parentName:"tr",align:null},"an output internally randomly generated if R!=NULL, otherwise must be provided as an input"),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"pin"),(0,l.yg)("td",{parentName:"tr",align:null},"is the input PIN number"),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"TOKEN"),(0,l.yg)("td",{parentName:"tr",align:null},"is the input M-Pin token (the client secret with PIN portion removed)"),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"SEC"),(0,l.yg)("td",{parentName:"tr",align:null},"is output = -(x+y)(CS+TP), where CS is the reconstructed client secret, and TP is the time permit"),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"xID"),(0,l.yg)("td",{parentName:"tr",align:null},"is output = x.H(ID)"),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"xCID"),(0,l.yg)("td",{parentName:"tr",align:null},"is output = x.(H(ID)+H(d"),(0,l.yg)("td",{parentName:"tr",align:null},"H(ID)))"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"PERMIT"),(0,l.yg)("td",{parentName:"tr",align:null},"is the input time permit"),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"TimeValue"),(0,l.yg)("td",{parentName:"tr",align:null},"is input epoch time in seconds - a timestamp"),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"Y"),(0,l.yg)("td",{parentName:"tr",align:null},"is output H(t"),(0,l.yg)("td",{parentName:"tr",align:null},"U) or H(t"),(0,l.yg)("td",{parentName:"tr",align:null},"UT) if Time Permits enabled")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"Message"),(0,l.yg)("td",{parentName:"tr",align:null},"is the message to be signed"),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null})))),(0,l.yg)("a",{name:"MPIN192.SERVER"}),(0,l.yg)("h3",{id:"mpin192serversha-date-hid-htid-y-sst-xid-xcid-msec-e-f-cid-timevalue-message-pa-"},"MPIN192.SERVER(sha, date, HID, HTID, Y, SST, xID, xCID, mSEC, E, F, CID, TimeValue, MESSAGE, Pa) \u21d2"),(0,l.yg)("p",null,"Perform server side of the one-pass version of the M-Pin protocol"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.yg)("a",{parentName:"p",href:"#MPIN192"},(0,l.yg)("code",null,"MPIN192")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Returns"),": O for success or else error code",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}MPIN192{"}"}'),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"),(0,l.yg)("th",{parentName:"tr",align:null}),(0,l.yg)("th",{parentName:"tr",align:null}))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"sha"),(0,l.yg)("td",{parentName:"tr",align:null},"is the hash type"),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"date"),(0,l.yg)("td",{parentName:"tr",align:null},"is input date, in days since the epoch. Set to 0 if Time permits disabled"),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"HID"),(0,l.yg)("td",{parentName:"tr",align:null},"is output H(ID), a hash of the client ID"),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"HTID"),(0,l.yg)("td",{parentName:"tr",align:null},"is output H(ID)+H(d"),(0,l.yg)("td",{parentName:"tr",align:null},"H(ID))"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"Y"),(0,l.yg)("td",{parentName:"tr",align:null},"is output H(t"),(0,l.yg)("td",{parentName:"tr",align:null},"U) or H(t"),(0,l.yg)("td",{parentName:"tr",align:null},"UT) if Time Permits enabled")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"SST"),(0,l.yg)("td",{parentName:"tr",align:null},"is the input server secret"),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"xID"),(0,l.yg)("td",{parentName:"tr",align:null},"is input from the client = x.H(ID)"),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"xCID"),(0,l.yg)("td",{parentName:"tr",align:null},"is input from the client= x.(H(ID)+H(d"),(0,l.yg)("td",{parentName:"tr",align:null},"H(ID)))"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"mSEC"),(0,l.yg)("td",{parentName:"tr",align:null},"is an input from the client"),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"E"),(0,l.yg)("td",{parentName:"tr",align:null},"is an output to help the Kangaroos to find the PIN error, or NULL if not required"),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"F"),(0,l.yg)("td",{parentName:"tr",align:null},"is an output to help the Kangaroos to find the PIN error, or NULL if not required"),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"CID"),(0,l.yg)("td",{parentName:"tr",align:null},"is the input claimed client identity"),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"TimeValue"),(0,l.yg)("td",{parentName:"tr",align:null},"is input epoch time in seconds - a timestamp"),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"MESSAGE"),(0,l.yg)("td",{parentName:"tr",align:null},"is the message to be signed"),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"Pa"),(0,l.yg)("td",{parentName:"tr",align:null},"is input from the client z.Q or NULL if the key-escrow less scheme is not used"),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null})))),(0,l.yg)("a",{name:"MPIN192.PRECOMPUTE"}),(0,l.yg)("h3",{id:"mpin192precomputetoken-cid-g1-g2-"},"MPIN192.PRECOMPUTE(TOKEN, CID, G1, G2) \u21d2"),(0,l.yg)("p",null,"Precompute values for use by the client side of M-Pin Full"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.yg)("a",{parentName:"p",href:"#MPIN192"},(0,l.yg)("code",null,"MPIN192")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Returns"),": O for success or else error code",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}MPIN192{"}"}'),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"TOKEN"),(0,l.yg)("td",{parentName:"tr",align:null},"is the input M-Pin token (the client secret with PIN portion removed)")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"CID"),(0,l.yg)("td",{parentName:"tr",align:null},"is the input client identity")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"G1"),(0,l.yg)("td",{parentName:"tr",align:null},"precomputed output")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"G2"),(0,l.yg)("td",{parentName:"tr",align:null},"precomputed output")))),(0,l.yg)("a",{name:"MPIN192.HASH_ALL"}),(0,l.yg)("h3",{id:"mpin192hash_allsha-hid-xid-xcid-sec-y-r-w-"},"MPIN192.HASH_ALL(sha, HID, xID, xCID, SEC, Y, R, W) \u21d2"),(0,l.yg)("p",null,"Hash the session transcript"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.yg)("a",{parentName:"p",href:"#MPIN192"},(0,l.yg)("code",null,"MPIN192")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Returns"),": H the output is the hash of all of the above that apply",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}MPIN192{"}"}'),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"),(0,l.yg)("th",{parentName:"tr",align:null}))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"sha"),(0,l.yg)("td",{parentName:"tr",align:null},"is the hash type"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"HID"),(0,l.yg)("td",{parentName:"tr",align:null},"is the hashed input client ID = H(ID)"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"xID"),(0,l.yg)("td",{parentName:"tr",align:null},"is the client output = x.H(ID)"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"xCID"),(0,l.yg)("td",{parentName:"tr",align:null},"is the client output = x.(H(ID)+H(T"),(0,l.yg)("td",{parentName:"tr",align:null},"H(ID)))")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"SEC"),(0,l.yg)("td",{parentName:"tr",align:null},"is the client part response"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"Y"),(0,l.yg)("td",{parentName:"tr",align:null},"is the server challenge"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"R"),(0,l.yg)("td",{parentName:"tr",align:null},"is the client part response"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"W"),(0,l.yg)("td",{parentName:"tr",align:null},"is the server part response"),(0,l.yg)("td",{parentName:"tr",align:null})))),(0,l.yg)("a",{name:"MPIN192.CLIENT_KEY"}),(0,l.yg)("h3",{id:"mpin192client_keysha-g1-g2-pin-r-x-h-wcid-ck-"},"MPIN192.CLIENT_KEY(sha, G1, G2, pin, R, X, H, wCID, CK) \u21d2"),(0,l.yg)("p",null,"Calculate Key on Client side for M-Pin Full"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.yg)("a",{parentName:"p",href:"#MPIN192"},(0,l.yg)("code",null,"MPIN192")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Returns"),": 0 or an error code",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}MPIN192{"}"}'),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"sha"),(0,l.yg)("td",{parentName:"tr",align:null},"is the hash type")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"G1"),(0,l.yg)("td",{parentName:"tr",align:null},"precomputed input")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"G2"),(0,l.yg)("td",{parentName:"tr",align:null},"precomputed input")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"pin"),(0,l.yg)("td",{parentName:"tr",align:null},"is the input PIN number")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"R"),(0,l.yg)("td",{parentName:"tr",align:null},"is an input, a locally generated random number")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"X"),(0,l.yg)("td",{parentName:"tr",align:null},"is an input, a locally generated random number")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"H"),(0,l.yg)("td",{parentName:"tr",align:null},"is an input, hash of the protocol transcript")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"wCID"),(0,l.yg)("td",{parentName:"tr",align:null},"is the input Server-side Diffie-Hellman component")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"CK"),(0,l.yg)("td",{parentName:"tr",align:null},"is the output calculated shared key")))),(0,l.yg)("a",{name:"MPIN192.SERVER_KEY"}),(0,l.yg)("h3",{id:"mpin192server_keyh-z-sst-w-h-hid-xid-xcid-sk-"},"MPIN192.SERVER_KEY(h, Z, SST, W, H, HID, xID, xCID, SK) \u21d2"),(0,l.yg)("p",null,"Calculate Key on Server side for M-Pin Full"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.yg)("a",{parentName:"p",href:"#MPIN192"},(0,l.yg)("code",null,"MPIN192")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Returns"),": 0 or an error code",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}MPIN192{"}"}'),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"),(0,l.yg)("th",{parentName:"tr",align:null}))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"h"),(0,l.yg)("td",{parentName:"tr",align:null},"is the hash type"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"Z"),(0,l.yg)("td",{parentName:"tr",align:null},"is the input Client-side Diffie-Hellman component"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"SST"),(0,l.yg)("td",{parentName:"tr",align:null},"is the input server secret"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"W"),(0,l.yg)("td",{parentName:"tr",align:null},"is an input random number generated by the server"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"H"),(0,l.yg)("td",{parentName:"tr",align:null},"is an input, hash of the protocol transcript"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"HID"),(0,l.yg)("td",{parentName:"tr",align:null},"is the hashed input client ID = H(ID)"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"xID"),(0,l.yg)("td",{parentName:"tr",align:null},"is input from the client = x.H(ID)"),(0,l.yg)("td",{parentName:"tr",align:null})),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"xCID"),(0,l.yg)("td",{parentName:"tr",align:null},"is input from the client= x.(H(ID)+H(d"),(0,l.yg)("td",{parentName:"tr",align:null},"H(ID)))")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"SK"),(0,l.yg)("td",{parentName:"tr",align:null},"is the output calculated shared key"),(0,l.yg)("td",{parentName:"tr",align:null})))),(0,l.yg)("a",{name:"MPIN192.GET_DVS_KEYPAIR"}),(0,l.yg)("h3",{id:"mpin192get_dvs_keypairrng-z-pa-"},"MPIN192.GET_DVS_KEYPAIR(rng, Z, Pa) \u21d2"),(0,l.yg)("p",null,"Generates a random public key for the client z.Q"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.yg)("a",{parentName:"p",href:"#MPIN192"},(0,l.yg)("code",null,"MPIN192")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Returns"),": 0 or an error code",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}MPIN192{"}"}'),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"rng"),(0,l.yg)("td",{parentName:"tr",align:null},"cryptographically secure random number generator")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"Z"),(0,l.yg)("td",{parentName:"tr",align:null},"an output internally randomly generated if R!=NULL, otherwise it must be provided as an input")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"Pa"),(0,l.yg)("td",{parentName:"tr",align:null},"the output public key for the client")))))}o.isMDXComponent=!0}}]);