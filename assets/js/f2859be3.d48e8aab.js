"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8108],{3905:(t,e,r)=>{r.d(e,{Zo:()=>p,kt:()=>g});var a=r(7294);function i(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function o(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,a)}return r}function n(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?o(Object(r),!0).forEach((function(e){i(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function c(t,e){if(null==t)return{};var r,a,i=function(t,e){if(null==t)return{};var r,a,i={},o=Object.keys(t);for(a=0;a<o.length;a++)r=o[a],e.indexOf(r)>=0||(i[r]=t[r]);return i}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)r=o[a],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(i[r]=t[r])}return i}var l=a.createContext({}),u=function(t){var e=a.useContext(l),r=e;return t&&(r="function"==typeof t?t(e):n(n({},e),t)),r},p=function(t){var e=u(t.components);return a.createElement(l.Provider,{value:e},t.children)},s="mdxType",b={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(t,e){var r=t.components,i=t.mdxType,o=t.originalType,l=t.parentName,p=c(t,["components","mdxType","originalType","parentName"]),s=u(r),m=i,g=s["".concat(l,".").concat(m)]||s[m]||b[m]||o;return r?a.createElement(g,n(n({ref:e},p),{},{components:r})):a.createElement(g,n({ref:e},p))}));function g(t,e){var r=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var o=r.length,n=new Array(o);n[0]=m;var c={};for(var l in e)hasOwnProperty.call(e,l)&&(c[l]=e[l]);c.originalType=t,c[s]="string"==typeof t?t:i,n[1]=c;for(var u=2;u<o;u++)n[u]=r[u];return a.createElement.apply(null,n)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9875:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>c,metadata:()=>u,toc:()=>s});var a=r(7462),i=r(3366),o=(r(7294),r(3905)),n=["components"],c={id:"contributor-guide",title:"Contributor's Guide",sidebar_label:"Contributor's Guide"},l="Become a contributor",u={unversionedId:"contributor-guide",id:"contributor-guide",title:"Contributor's Guide",description:"Apache Milagro Mailing List",source:"@site/../docs/contributor-guide.md",sourceDirName:".",slug:"/contributor-guide",permalink:"/docs/contributor-guide",draft:!1,tags:[],version:"current",frontMatter:{id:"contributor-guide",title:"Contributor's Guide",sidebar_label:"Contributor's Guide"},sidebar:"docs",previous:{title:"ZKP-MFA API",permalink:"/docs/zkp-mfa-api"},next:{title:"Downloads",permalink:"/docs/downloads"}},p={},s=[{value:"Apache Milagro Mailing List",id:"apache-milagro-mailing-list",level:2},{value:"Repositories",id:"repositories",level:2}],b={toc:s};function m(t){var e=t.components,r=(0,i.Z)(t,n);return(0,o.kt)("wrapper",(0,a.Z)({},b,r,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"become-a-contributor"},"Become a contributor"),(0,o.kt)("h2",{id:"apache-milagro-mailing-list"},"Apache Milagro Mailing List"),(0,o.kt)("p",null,"If you'd like to contribute, the first step is to subscribe to our developer's mailing list. Please send an email to:"),(0,o.kt)("a",{href:"mailto:dev-subscribe@milagro.apache.org?Subject=Subscribe",target:"_top"},"dev-subscribe @ milagro.apache.org"),(0,o.kt)("h2",{id:"repositories"},"Repositories"),(0,o.kt)("p",null,"Our current GitHub repositories are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/apache/incubator-milagro"},"https://github.com/apache/incubator-milagro")," - used to build this website.   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/apache/incubator-milagro-crypto-c"},"https://github.com/apache/incubator-milagro-crypto-c")," - standards compliant cryptographic library written in C.   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/apache/incubator-milagro-MPC"},"https://github.com/apache/incubator-milagro-MPC")," - Multi-Party Computation library (libmpc).   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/apache/incubator-milagro-crypto-js"},"https://github.com/apache/incubator-milagro-crypto-js")," - standards compliant cryptographic library written in JavaScript.   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/apache/incubator-milagro-crypto-rust"},"https://github.com/apache/incubator-milagro-crypto-rust")," - standards compliant cryptographic library written in Rust.   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/apache/incubator-milagro-dta"},"https://github.com/apache/incubator-milagro-dta")," - Milagro Decentralized Trust Authority (D-TA) - a collaborative key management server.     ")),(0,o.kt)("p",null,'Please use the "Issues" tab on these repos to report any bugs or feature requests.'))}m.isMDXComponent=!0}}]);