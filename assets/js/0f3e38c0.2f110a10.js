"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1637],{5680:(e,n,a)=>{a.d(n,{xA:()=>y,yg:()=>u});var r=a(6540);function t(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function p(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,r)}return a}function g(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?p(Object(a),!0).forEach((function(n){t(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):p(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function l(e,n){if(null==e)return{};var a,r,t=function(e,n){if(null==e)return{};var a,r,t={},p=Object.keys(e);for(r=0;r<p.length;r++)a=p[r],n.indexOf(a)>=0||(t[a]=e[a]);return t}(e,n);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(r=0;r<p.length;r++)a=p[r],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(t[a]=e[a])}return t}var i=r.createContext({}),o=function(e){var n=r.useContext(i),a=n;return e&&(a="function"==typeof e?e(n):g(g({},n),e)),a},y=function(e){var n=o(e.components);return r.createElement(i.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},s=r.forwardRef((function(e,n){var a=e.components,t=e.mdxType,p=e.originalType,i=e.parentName,y=l(e,["components","mdxType","originalType","parentName"]),m=o(a),s=t,u=m["".concat(i,".").concat(s)]||m[s]||d[s]||p;return a?r.createElement(u,g(g({ref:n},y),{},{components:a})):r.createElement(u,g({ref:n},y))}));function u(e,n){var a=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var p=a.length,g=new Array(p);g[0]=s;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l[m]="string"==typeof e?e:t,g[1]=l;for(var o=2;o<p;o++)g[o]=a[o];return r.createElement.apply(null,g)}return r.createElement.apply(null,a)}s.displayName="MDXCreateElement"},1229:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>y,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>m});var r=a(8168),t=a(8587),p=(a(6540),a(5680)),g=["components"],l={id:"dbig",title:"DBIG",sidebar_label:"DBIG"},i=void 0,o={unversionedId:"cryptojs/dbig",id:"cryptojs/dbig",title:"DBIG",description:"DBIG",source:"@site/../docs/cryptojs/dbig.md",sourceDirName:"cryptojs",slug:"/cryptojs/dbig",permalink:"/docs/cryptojs/dbig",draft:!1,tags:[],version:"current",frontMatter:{id:"dbig",title:"DBIG",sidebar_label:"DBIG"},sidebar:"docs",previous:{title:"BLS256",permalink:"/docs/cryptojs/bls256"},next:{title:"ECDH",permalink:"/docs/cryptojs/ecdh"}},y={},m=[{value:"DBIG",id:"dbig",level:2},{value:"new DBIG()",id:"new-dbig",level:3},{value:"dbiG.zero() \u21d2",id:"dbigzero-",level:3},{value:"dbiG.copy() \u21d2",id:"dbigcopy-",level:3},{value:"dbiG.hcopy() \u21d2",id:"dbighcopy-",level:3},{value:"dbiG.norm() \u21d2",id:"dbignorm-",level:3},{value:"dbiG.muladd()",id:"dbigmuladd",level:3},{value:"dbiG.shr() \u21d2",id:"dbigshr-",level:3},{value:"dbiG.shl() \u21d2",id:"dbigshl-",level:3},{value:"dbiG.cmove()",id:"dbigcmove",level:3},{value:"dbiG.add() \u21d2",id:"dbigadd-",level:3},{value:"dbiG.sub() \u21d2",id:"dbigsub-",level:3},{value:"dbiG.nbits() \u21d2",id:"dbignbits-",level:3},{value:"dbiG.toString() \u21d2",id:"dbigtostring-",level:3},{value:"dbiG.mod() \u21d2",id:"dbigmod-",level:3},{value:"dbiG.div() \u21d2",id:"dbigdiv-",level:3},{value:"dbiG.split() \u21d2",id:"dbigsplit-",level:3},{value:"DBIG.comp() \u21d2",id:"dbigcomp-",level:3}],d={toc:m},s="wrapper";function u(e){var n=e.components,a=(0,t.A)(e,g);return(0,p.yg)(s,(0,r.A)({},d,a,{components:n,mdxType:"MDXLayout"}),(0,p.yg)("a",{name:"DBIG"}),(0,p.yg)("h2",{id:"dbig"},"DBIG"),(0,p.yg)("p",null,(0,p.yg)("strong",{parentName:"p"},"Kind"),": global class",(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"this"),": ",(0,p.yg)("code",null,'{"{"}DBIG{"}"}'),"  "),(0,p.yg)("ul",null,(0,p.yg)("li",{parentName:"ul"},(0,p.yg)("a",{parentName:"li",href:"#DBIG"},"DBIG"),(0,p.yg)("ul",{parentName:"li"},(0,p.yg)("li",{parentName:"ul"},(0,p.yg)("a",{parentName:"li",href:"#new_DBIG_new"},"new DBIG()")),(0,p.yg)("li",{parentName:"ul"},(0,p.yg)("em",{parentName:"li"},"instance"),(0,p.yg)("ul",{parentName:"li"},(0,p.yg)("li",{parentName:"ul"},(0,p.yg)("a",{parentName:"li",href:"#DBIG+zero"},".zero()")," \u21d2"),(0,p.yg)("li",{parentName:"ul"},(0,p.yg)("a",{parentName:"li",href:"#DBIG+copy"},".copy()")," \u21d2"),(0,p.yg)("li",{parentName:"ul"},(0,p.yg)("a",{parentName:"li",href:"#DBIG+hcopy"},".hcopy()")," \u21d2"),(0,p.yg)("li",{parentName:"ul"},(0,p.yg)("a",{parentName:"li",href:"#DBIG+norm"},".norm()")," \u21d2"),(0,p.yg)("li",{parentName:"ul"},(0,p.yg)("a",{parentName:"li",href:"#DBIG+muladd"},".muladd()")),(0,p.yg)("li",{parentName:"ul"},(0,p.yg)("a",{parentName:"li",href:"#DBIG+shr"},".shr()")," \u21d2"),(0,p.yg)("li",{parentName:"ul"},(0,p.yg)("a",{parentName:"li",href:"#DBIG+shl"},".shl()")," \u21d2"),(0,p.yg)("li",{parentName:"ul"},(0,p.yg)("a",{parentName:"li",href:"#DBIG+cmove"},".cmove()")),(0,p.yg)("li",{parentName:"ul"},(0,p.yg)("a",{parentName:"li",href:"#DBIG+add"},".add()")," \u21d2"),(0,p.yg)("li",{parentName:"ul"},(0,p.yg)("a",{parentName:"li",href:"#DBIG+sub"},".sub()")," \u21d2"),(0,p.yg)("li",{parentName:"ul"},(0,p.yg)("a",{parentName:"li",href:"#DBIG+nbits"},".nbits()")," \u21d2"),(0,p.yg)("li",{parentName:"ul"},(0,p.yg)("a",{parentName:"li",href:"#DBIG+toString"},".toString()")," \u21d2"),(0,p.yg)("li",{parentName:"ul"},(0,p.yg)("a",{parentName:"li",href:"#DBIG+mod"},".mod()")," \u21d2"),(0,p.yg)("li",{parentName:"ul"},(0,p.yg)("a",{parentName:"li",href:"#DBIG+div"},".div()")," \u21d2"),(0,p.yg)("li",{parentName:"ul"},(0,p.yg)("a",{parentName:"li",href:"#DBIG+split"},".split()")," \u21d2"))),(0,p.yg)("li",{parentName:"ul"},(0,p.yg)("em",{parentName:"li"},"static"),(0,p.yg)("ul",{parentName:"li"},(0,p.yg)("li",{parentName:"ul"},(0,p.yg)("a",{parentName:"li",href:"#DBIG.comp"},".comp()")," \u21d2")))))),(0,p.yg)("a",{name:"new_DBIG_new"}),(0,p.yg)("h3",{id:"new-dbig"},"new DBIG()"),(0,p.yg)("p",null,"General purpose Constructor"),(0,p.yg)("a",{name:"DBIG+zero"}),(0,p.yg)("h3",{id:"dbigzero-"},"dbiG.zero() \u21d2"),(0,p.yg)("p",null,"set to zero"),(0,p.yg)("p",null,(0,p.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,p.yg)("a",{parentName:"p",href:"#DBIG"},(0,p.yg)("code",null,"DBIG")),(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"Returns"),": BIG number",(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"this"),": ",(0,p.yg)("code",null,'{"{"}DBIG{"}"}'),"  "),(0,p.yg)("a",{name:"DBIG+copy"}),(0,p.yg)("h3",{id:"dbigcopy-"},"dbiG.copy() \u21d2"),(0,p.yg)("p",null,"set to b"),(0,p.yg)("p",null,(0,p.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,p.yg)("a",{parentName:"p",href:"#DBIG"},(0,p.yg)("code",null,"DBIG")),(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"Returns"),": DBIG number",(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"this"),": ",(0,p.yg)("code",null,'{"{"}DBIG{"}"}'),(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"Parameter"),": b DBIG number  "),(0,p.yg)("a",{name:"DBIG+hcopy"}),(0,p.yg)("h3",{id:"dbighcopy-"},"dbiG.hcopy() \u21d2"),(0,p.yg)("p",null,"copy from ctx.BIG"),(0,p.yg)("p",null,(0,p.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,p.yg)("a",{parentName:"p",href:"#DBIG"},(0,p.yg)("code",null,"DBIG")),(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"Returns"),": DBIG number",(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"this"),": ",(0,p.yg)("code",null,'{"{"}DBIG{"}"}'),(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"Parameter"),": b BIG number  "),(0,p.yg)("a",{name:"DBIG+norm"}),(0,p.yg)("h3",{id:"dbignorm-"},"dbiG.norm() \u21d2"),(0,p.yg)("p",null,"normalise DBIG - force all digits ","<"," 2^BASEBITS"),(0,p.yg)("p",null,(0,p.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,p.yg)("a",{parentName:"p",href:"#DBIG"},(0,p.yg)("code",null,"DBIG")),(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"Returns"),": DBIG number",(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"this"),": ",(0,p.yg)("code",null,'{"{"}DBIG{"}"}'),"  "),(0,p.yg)("a",{name:"DBIG+muladd"}),(0,p.yg)("h3",{id:"dbigmuladd"},"dbiG.muladd()"),(0,p.yg)("p",null,"this","[i]","+=x","*","y+c, and return high part"),(0,p.yg)("p",null,(0,p.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,p.yg)("a",{parentName:"p",href:"#DBIG"},(0,p.yg)("code",null,"DBIG")),(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"this"),": ",(0,p.yg)("code",null,'{"{"}DBIG{"}"}'),"  "),(0,p.yg)("a",{name:"DBIG+shr"}),(0,p.yg)("h3",{id:"dbigshr-"},"dbiG.shr() \u21d2"),(0,p.yg)("p",null,"General shift right by k bits"),(0,p.yg)("p",null,(0,p.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,p.yg)("a",{parentName:"p",href:"#DBIG"},(0,p.yg)("code",null,"DBIG")),(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"Returns"),": BIG number",(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"this"),": ",(0,p.yg)("code",null,'{"{"}DBIG{"}"}'),(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"Parameter"),": k Number of bits to shift  "),(0,p.yg)("a",{name:"DBIG+shl"}),(0,p.yg)("h3",{id:"dbigshl-"},"dbiG.shl() \u21d2"),(0,p.yg)("p",null,"General shift left by k bits"),(0,p.yg)("p",null,(0,p.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,p.yg)("a",{parentName:"p",href:"#DBIG"},(0,p.yg)("code",null,"DBIG")),(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"Returns"),": BIG number",(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"this"),": ",(0,p.yg)("code",null,'{"{"}BIG{"}"}'),(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"Parameter"),": k Number of bits to shift  "),(0,p.yg)("a",{name:"DBIG+cmove"}),(0,p.yg)("h3",{id:"dbigcmove"},"dbiG.cmove()"),(0,p.yg)("p",null,"Conditional move of BIG depending on d using XOR - no branches"),(0,p.yg)("p",null,(0,p.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,p.yg)("a",{parentName:"p",href:"#DBIG"},(0,p.yg)("code",null,"DBIG")),(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"this"),": ",(0,p.yg)("code",null,'{"{"}DBIG{"}"}'),(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"Parameter"),": b DBIG number",(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"Parameter"),": d DBIG number  "),(0,p.yg)("a",{name:"DBIG+add"}),(0,p.yg)("h3",{id:"dbigadd-"},"dbiG.add() \u21d2"),(0,p.yg)("p",null,"Sum two DBIG mumbers"),(0,p.yg)("p",null,(0,p.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,p.yg)("a",{parentName:"p",href:"#DBIG"},(0,p.yg)("code",null,"DBIG")),(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"Returns"),": this+=x",(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"this"),": ",(0,p.yg)("code",null,'{"{"}DBIG{"}"}'),(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"Parameter"),": x DBIG object  "),(0,p.yg)("a",{name:"DBIG+sub"}),(0,p.yg)("h3",{id:"dbigsub-"},"dbiG.sub() \u21d2"),(0,p.yg)("p",null,"Subtract DBIG from one another"),(0,p.yg)("p",null,(0,p.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,p.yg)("a",{parentName:"p",href:"#DBIG"},(0,p.yg)("code",null,"DBIG")),(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"Returns"),": this-=x",(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"this"),": ",(0,p.yg)("code",null,'{"{"}DBIG{"}"}'),(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"Parameter"),": x BIG object  "),(0,p.yg)("a",{name:"DBIG+nbits"}),(0,p.yg)("h3",{id:"dbignbits-"},"dbiG.nbits() \u21d2"),(0,p.yg)("p",null,"length in bits"),(0,p.yg)("p",null,(0,p.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,p.yg)("a",{parentName:"p",href:"#DBIG"},(0,p.yg)("code",null,"DBIG")),(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"Returns"),": The number of bigs in DBIG object",(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"this"),": ",(0,p.yg)("code",null,'{"{"}DBIG{"}"}'),"  "),(0,p.yg)("a",{name:"DBIG+toString"}),(0,p.yg)("h3",{id:"dbigtostring-"},"dbiG.toString() \u21d2"),(0,p.yg)("p",null,"Convert to string"),(0,p.yg)("p",null,(0,p.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,p.yg)("a",{parentName:"p",href:"#DBIG"},(0,p.yg)("code",null,"DBIG")),(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"Returns"),": string representation of a BIG number",(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"this"),": ",(0,p.yg)("code",null,'{"{"}DBIG{"}"}'),"  "),(0,p.yg)("a",{name:"DBIG+mod"}),(0,p.yg)("h3",{id:"dbigmod-"},"dbiG.mod() \u21d2"),(0,p.yg)("p",null,"reduces this DBIG mod a ctx.BIG, and returns the ctx.BIG"),(0,p.yg)("p",null,(0,p.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,p.yg)("a",{parentName:"p",href:"#DBIG"},(0,p.yg)("code",null,"DBIG")),(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"Returns"),": BIG object",(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"this"),": ",(0,p.yg)("code",null,'{"{"}DBIG{"}"}'),"  "),(0,p.yg)("a",{name:"DBIG+div"}),(0,p.yg)("h3",{id:"dbigdiv-"},"dbiG.div() \u21d2"),(0,p.yg)("p",null,"this/=c"),(0,p.yg)("p",null,(0,p.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,p.yg)("a",{parentName:"p",href:"#DBIG"},(0,p.yg)("code",null,"DBIG")),(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"Returns"),": DBIG number",(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"this"),": ",(0,p.yg)("code",null,'{"{"}DBIG{"}"}'),(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"Paramter"),": c divisor  "),(0,p.yg)("a",{name:"DBIG+split"}),(0,p.yg)("h3",{id:"dbigsplit-"},"dbiG.split() \u21d2"),(0,p.yg)("p",null,"split this DBIG at position n, return higher half, keep lower half"),(0,p.yg)("p",null,(0,p.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,p.yg)("a",{parentName:"p",href:"#DBIG"},(0,p.yg)("code",null,"DBIG")),(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"Returns"),": lower half BIG number",(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"this"),": ",(0,p.yg)("code",null,'{"{"}DBIG{"}"}'),(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"Paramter"),": n Position to splitdivisor  "),(0,p.yg)("a",{name:"DBIG.comp"}),(0,p.yg)("h3",{id:"dbigcomp-"},"DBIG.comp() \u21d2"),(0,p.yg)("p",null,"Compare a and b"),(0,p.yg)("p",null,(0,p.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,p.yg)("a",{parentName:"p",href:"#DBIG"},(0,p.yg)("code",null,"DBIG")),(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"Returns"),": 0 if a==b, -1 if a","<","b, +1 if a",">","b",(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"this"),": ",(0,p.yg)("code",null,'{"{"}DBIG{"}"}'),(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"Parameter"),": a DBIG number (normalised)",(0,p.yg)("br",{parentName:"p"}),"\n",(0,p.yg)("strong",{parentName:"p"},"Parameter"),": b DBIG number (normalised"))}u.isMDXComponent=!0}}]);