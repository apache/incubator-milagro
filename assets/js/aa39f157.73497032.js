"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7878],{5680:(e,t,a)=>{a.d(t,{xA:()=>m,yg:()=>d});var n=a(6540);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function g(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var y=n.createContext({}),i=function(e){var t=n.useContext(y),a=t;return e&&(a="function"==typeof e?e(t):g(g({},t),e)),a},m=function(e){var t=i(e.components);return n.createElement(y.Provider,{value:t},e.children)},o="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,y=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),o=i(a),u=l,d=o["".concat(y,".").concat(u)]||o[u]||c[u]||r;return a?n.createElement(d,g(g({ref:t},m),{},{components:a})):n.createElement(d,g({ref:t},m))}));function d(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,g=new Array(r);g[0]=u;var p={};for(var y in t)hasOwnProperty.call(t,y)&&(p[y]=t[y]);p.originalType=e,p[o]="string"==typeof e?e:l,g[1]=p;for(var i=2;i<r;i++)g[i]=a[i];return n.createElement.apply(null,g)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},2363:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>y,default:()=>d,frontMatter:()=>p,metadata:()=>i,toc:()=>o});var n=a(8168),l=a(8587),r=(a(6540),a(5680)),g=["components"],p={id:"ecp",title:"ECP",sidebar_label:"ECP"},y=void 0,i={unversionedId:"cryptojs/ecp",id:"cryptojs/ecp",title:"ECP",description:"ECP",source:"@site/../docs/cryptojs/ecp.md",sourceDirName:"cryptojs",slug:"/cryptojs/ecp",permalink:"/docs/cryptojs/ecp",draft:!1,tags:[],version:"current",frontMatter:{id:"ecp",title:"ECP",sidebar_label:"ECP"},sidebar:"docs",previous:{title:"ECDH",permalink:"/docs/cryptojs/ecdh"},next:{title:"ECP2",permalink:"/docs/cryptojs/ecp2"}},m={},o=[{value:"ECP",id:"ecp",level:2},{value:"new ECP()",id:"new-ecp",level:3},{value:"ecP.is_infinity(1)",id:"ecpis_infinity1",level:3},{value:"ecP.cswap()",id:"ecpcswap",level:3},{value:"ecP.cmove()",id:"ecpcmove",level:3},{value:"ecP.select()",id:"ecpselect",level:3},{value:"ecP.copy(P)",id:"ecpcopyp",level:3},{value:"ecP.neg()",id:"ecpneg",level:3},{value:"ecP.inf()",id:"ecpinf",level:3},{value:"ecP.setxy(ix, iy)",id:"ecpsetxyix-iy",level:3},{value:"ecP.setxi(ix, s)",id:"ecpsetxiix-s",level:3},{value:"ecP.setx(ix)",id:"ecpsetxix",level:3},{value:"ecP.affine()",id:"ecpaffine",level:3},{value:"ecP.getX()",id:"ecpgetx",level:3},{value:"ecP.getY()",id:"ecpgety",level:3},{value:"ecP.getS()",id:"ecpgets",level:3},{value:"ecP.getx()",id:"ecpgetx-1",level:3},{value:"ecP.gety()",id:"ecpgety-1",level:3},{value:"ecP.getz()",id:"ecpgetz",level:3},{value:"ecP.toBytes(b)",id:"ecptobytesb",level:3},{value:"ecP.toString() \u21d2",id:"ecptostring-",level:3},{value:"ecP.dbl()",id:"ecpdbl",level:3},{value:"ecP.add()",id:"ecpadd",level:3},{value:"ecP.sub(Q)",id:"ecpsubq",level:3},{value:"ecP.pinmul(e, bts)",id:"ecppinmule-bts",level:3},{value:"ecP.cfp()",id:"ecpcfp",level:3},{value:"ecP.mul(e)",id:"ecpmule",level:3},{value:"ecP.mul2(e, Q, f)",id:"ecpmul2e-q-f",level:3},{value:"ECP.generator()",id:"ecpgenerator",level:3},{value:"ECP.fromBytes(b)",id:"ecpfrombytesb",level:3},{value:"ECP.RHS(x)",id:"ecprhsx",level:3}],c={toc:o},u="wrapper";function d(e){var t=e.components,a=(0,l.A)(e,g);return(0,r.yg)(u,(0,n.A)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("a",{name:"ECP"}),(0,r.yg)("h2",{id:"ecp"},"ECP"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": global class",(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"this"),": ",(0,r.yg)("code",null,'{"{"}ECP{"}"}'),"  "),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#ECP"},"ECP"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#new_ECP_new"},"new ECP()")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("em",{parentName:"li"},"instance"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#ECP+is_infinity"},".is_infinity(1)")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#ECP+cswap"},".cswap()")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#ECP+cmove"},".cmove()")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#ECP+select"},".select()")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#ECP+copy"},".copy(P)")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#ECP+neg"},".neg()")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#ECP+inf"},".inf()")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#ECP+setxy"},".setxy(ix, iy)")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#ECP+setxi"},".setxi(ix, s)")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#ECP+setx"},".setx(ix)")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#ECP+affine"},".affine()")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#ECP+getX"},".getX()")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#ECP+getY"},".getY()")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#ECP+getS"},".getS()")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#ECP+getx"},".getx()")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#ECP+gety"},".gety()")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#ECP+getz"},".getz()")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#ECP+toBytes"},".toBytes(b)")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#ECP+toString"},".toString()")," \u21d2"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#ECP+dbl"},".dbl()")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#ECP+add"},".add()")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#ECP+sub"},".sub(Q)")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#ECP+pinmul"},".pinmul(e, bts)")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#ECP+cfp"},".cfp()")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#ECP+mul"},".mul(e)")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#ECP+mul2"},".mul2(e, Q, f)")))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("em",{parentName:"li"},"static"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#ECP.generator"},".generator()")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#ECP.fromBytes"},".fromBytes(b)")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#ECP.RHS"},".RHS(x)"))))))),(0,r.yg)("a",{name:"new_ECP_new"}),(0,r.yg)("h3",{id:"new-ecp"},"new ECP()"),(0,r.yg)("p",null,"Creates an instance of ECP"),(0,r.yg)("a",{name:"ECP+is_infinity"}),(0,r.yg)("h3",{id:"ecpis_infinity1"},"ecP.is_infinity(1)"),(0,r.yg)("p",null,"Tests for ECP point equal to infinity"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#ECP"},(0,r.yg)("code",null,"ECP")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"this"),": ",(0,r.yg)("code",null,'{"{"}ECP{"}"}'),"  "),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Param"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"1"),(0,r.yg)("td",{parentName:"tr",align:null},"if infinity, else returns 0")))),(0,r.yg)("a",{name:"ECP+cswap"}),(0,r.yg)("h3",{id:"ecpcswap"},"ecP.cswap()"),(0,r.yg)("p",null,"conditional swap of this and Q dependant on dCopy ECP point to another ECP point"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#ECP"},(0,r.yg)("code",null,"ECP")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"this"),": ",(0,r.yg)("code",null,'{"{"}ECP{"}"}'),"  "),(0,r.yg)("a",{name:"ECP+cmove"}),(0,r.yg)("h3",{id:"ecpcmove"},"ecP.cmove()"),(0,r.yg)("p",null,"conditional move of Q to P dependant on d"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#ECP"},(0,r.yg)("code",null,"ECP")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"this"),": ",(0,r.yg)("code",null,'{"{"}ECP{"}"}'),"  "),(0,r.yg)("a",{name:"ECP+select"}),(0,r.yg)("h3",{id:"ecpselect"},"ecP.select()"),(0,r.yg)("p",null,"Constant time select from pre-computed table"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#ECP"},(0,r.yg)("code",null,"ECP")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"this"),": ",(0,r.yg)("code",null,'{"{"}ECP{"}"}'),"  "),(0,r.yg)("a",{name:"ECP+copy"}),(0,r.yg)("h3",{id:"ecpcopyp"},"ecP.copy(P)"),(0,r.yg)("p",null,"Copy ECP point to another ECP point"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#ECP"},(0,r.yg)("code",null,"ECP")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"this"),": ",(0,r.yg)("code",null,'{"{"}ECP{"}"}'),"  "),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Param"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"P"),(0,r.yg)("td",{parentName:"tr",align:null},"ECP instance")))),(0,r.yg)("a",{name:"ECP+neg"}),(0,r.yg)("h3",{id:"ecpneg"},"ecP.neg()"),(0,r.yg)("p",null,"set this=-this"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#ECP"},(0,r.yg)("code",null,"ECP")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"this"),": ",(0,r.yg)("code",null,'{"{"}ECP{"}"}'),"  "),(0,r.yg)("a",{name:"ECP+inf"}),(0,r.yg)("h3",{id:"ecpinf"},"ecP.inf()"),(0,r.yg)("p",null,"Set ECP to point-at-infinity"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#ECP"},(0,r.yg)("code",null,"ECP")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"this"),": ",(0,r.yg)("code",null,'{"{"}ECP{"}"}'),"  "),(0,r.yg)("a",{name:"ECP+setxy"}),(0,r.yg)("h3",{id:"ecpsetxyix-iy"},"ecP.setxy(ix, iy)"),(0,r.yg)("p",null,"set this=(x,y)"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#ECP"},(0,r.yg)("code",null,"ECP")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"this"),": ",(0,r.yg)("code",null,'{"{"}ECP{"}"}'),"  "),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Param"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"ix"),(0,r.yg)("td",{parentName:"tr",align:null},"x-value")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"iy"),(0,r.yg)("td",{parentName:"tr",align:null},"y-value")))),(0,r.yg)("a",{name:"ECP+setxi"}),(0,r.yg)("h3",{id:"ecpsetxiix-s"},"ecP.setxi(ix, s)"),(0,r.yg)("p",null,"set this=x, where x is ctx.BIG, y is derived from sign s"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#ECP"},(0,r.yg)("code",null,"ECP")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"this"),": ",(0,r.yg)("code",null,'{"{"}ECP{"}"}'),"  "),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Param"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"ix"),(0,r.yg)("td",{parentName:"tr",align:null},"x-value")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"s"),(0,r.yg)("td",{parentName:"tr",align:null},"sign to derive y")))),(0,r.yg)("a",{name:"ECP+setx"}),(0,r.yg)("h3",{id:"ecpsetxix"},"ecP.setx(ix)"),(0,r.yg)("p",null,"set this=x, y calculated from curve equation"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#ECP"},(0,r.yg)("code",null,"ECP")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"this"),": ",(0,r.yg)("code",null,'{"{"}ECP{"}"}'),"  "),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Param"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"ix"),(0,r.yg)("td",{parentName:"tr",align:null},"x-value")))),(0,r.yg)("a",{name:"ECP+affine"}),(0,r.yg)("h3",{id:"ecpaffine"},"ecP.affine()"),(0,r.yg)("p",null,"convert this to affine, from (x,y,z) to (x,y)"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#ECP"},(0,r.yg)("code",null,"ECP")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"this"),": ",(0,r.yg)("code",null,'{"{"}ECP{"}"}'),"  "),(0,r.yg)("a",{name:"ECP+getX"}),(0,r.yg)("h3",{id:"ecpgetx"},"ecP.getX()"),(0,r.yg)("p",null,"extract affine x as ctx.FP2"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#ECP"},(0,r.yg)("code",null,"ECP")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"this"),": ",(0,r.yg)("code",null,'{"{"}ECP{"}"}'),"  "),(0,r.yg)("a",{name:"ECP+getY"}),(0,r.yg)("h3",{id:"ecpgety"},"ecP.getY()"),(0,r.yg)("p",null,"extract affine y as ctx.FP2"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#ECP"},(0,r.yg)("code",null,"ECP")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"this"),": ",(0,r.yg)("code",null,'{"{"}ECP{"}"}'),"  "),(0,r.yg)("a",{name:"ECP+getS"}),(0,r.yg)("h3",{id:"ecpgets"},"ecP.getS()"),(0,r.yg)("p",null,"get sign of Y"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#ECP"},(0,r.yg)("code",null,"ECP")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"this"),": ",(0,r.yg)("code",null,'{"{"}ECP{"}"}'),"  "),(0,r.yg)("a",{name:"ECP+getx"}),(0,r.yg)("h3",{id:"ecpgetx-1"},"ecP.getx()"),(0,r.yg)("p",null,"extract x as ctx.FP"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#ECP"},(0,r.yg)("code",null,"ECP")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"this"),": ",(0,r.yg)("code",null,'{"{"}ECP{"}"}'),"  "),(0,r.yg)("a",{name:"ECP+gety"}),(0,r.yg)("h3",{id:"ecpgety-1"},"ecP.gety()"),(0,r.yg)("p",null,"extract y as ctx.FP"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#ECP"},(0,r.yg)("code",null,"ECP")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"this"),": ",(0,r.yg)("code",null,'{"{"}ECP{"}"}'),"  "),(0,r.yg)("a",{name:"ECP+getz"}),(0,r.yg)("h3",{id:"ecpgetz"},"ecP.getz()"),(0,r.yg)("p",null,"extract z as ctx.FP"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#ECP"},(0,r.yg)("code",null,"ECP")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"this"),": ",(0,r.yg)("code",null,'{"{"}ECP{"}"}'),"  "),(0,r.yg)("a",{name:"ECP+toBytes"}),(0,r.yg)("h3",{id:"ecptobytesb"},"ecP.toBytes(b)"),(0,r.yg)("p",null,"convert this to byte arrayextract projective x"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#ECP"},(0,r.yg)("code",null,"ECP")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"this"),": ",(0,r.yg)("code",null,'{"{"}ECP{"}"}'),"  "),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Param"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"b"),(0,r.yg)("td",{parentName:"tr",align:null},"byte array output")))),(0,r.yg)("a",{name:"ECP+toString"}),(0,r.yg)("h3",{id:"ecptostring-"},"ecP.toString() \u21d2"),(0,r.yg)("p",null,"convert this to hex string"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#ECP"},(0,r.yg)("code",null,"ECP")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Returns"),": hex string",(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"this"),": ",(0,r.yg)("code",null,'{"{"}ECP{"}"}'),"  "),(0,r.yg)("a",{name:"ECP+dbl"}),(0,r.yg)("h3",{id:"ecpdbl"},"ecP.dbl()"),(0,r.yg)("p",null,"this+=this"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#ECP"},(0,r.yg)("code",null,"ECP")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"this"),": ",(0,r.yg)("code",null,'{"{"}ECP{"}"}'),"  "),(0,r.yg)("a",{name:"ECP+add"}),(0,r.yg)("h3",{id:"ecpadd"},"ecP.add()"),(0,r.yg)("p",null,"Adds ECP instances"),(0,r.yg)("p",null,"param Q ECP instance"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#ECP"},(0,r.yg)("code",null,"ECP")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"this"),": ",(0,r.yg)("code",null,'{"{"}ECP{"}"}'),"  "),(0,r.yg)("a",{name:"ECP+sub"}),(0,r.yg)("h3",{id:"ecpsubq"},"ecP.sub(Q)"),(0,r.yg)("p",null,"Subtracts ECP instance Q  from this"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#ECP"},(0,r.yg)("code",null,"ECP")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"this"),": ",(0,r.yg)("code",null,'{"{"}ECP{"}"}'),"  "),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Param"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Q"),(0,r.yg)("td",{parentName:"tr",align:null},"ECP instance")))),(0,r.yg)("a",{name:"ECP+pinmul"}),(0,r.yg)("h3",{id:"ecppinmule-bts"},"ecP.pinmul(e, bts)"),(0,r.yg)("p",null,"constant time multiply by small integer of length bts - use ladder"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#ECP"},(0,r.yg)("code",null,"ECP")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"this"),": ",(0,r.yg)("code",null,'{"{"}ECP{"}"}'),"  "),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Param"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"e"),(0,r.yg)("td",{parentName:"tr",align:null},"small integer")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"bts"),(0,r.yg)("td",{parentName:"tr",align:null},"e bit length")))),(0,r.yg)("a",{name:"ECP+cfp"}),(0,r.yg)("h3",{id:"ecpcfp"},"ecP.cfp()"),(0,r.yg)("p",null,"multiply this by the curves cofactor"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#ECP"},(0,r.yg)("code",null,"ECP")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"this"),": ",(0,r.yg)("code",null,'{"{"}ECP{"}"}'),"  "),(0,r.yg)("a",{name:"ECP+mul"}),(0,r.yg)("h3",{id:"ecpmule"},"ecP.mul(e)"),(0,r.yg)("p",null,"Multiplies an ECP instance P by a BIG, side-channel resistant"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#ECP"},(0,r.yg)("code",null,"ECP")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"this"),": ",(0,r.yg)("code",null,'{"{"}ECP{"}"}'),"  "),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Param"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"e"),(0,r.yg)("td",{parentName:"tr",align:null},"BIG number multiplier")))),(0,r.yg)("a",{name:"ECP+mul2"}),(0,r.yg)("h3",{id:"ecpmul2e-q-f"},"ecP.mul2(e, Q, f)"),(0,r.yg)("p",null,"Return e.this+f.Q"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#ECP"},(0,r.yg)("code",null,"ECP")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"this"),": ",(0,r.yg)("code",null,'{"{"}ECP{"}"}'),"  "),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Param"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"e"),(0,r.yg)("td",{parentName:"tr",align:null},"BIG number multiplier")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Q"),(0,r.yg)("td",{parentName:"tr",align:null},"ECP instance")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"f"),(0,r.yg)("td",{parentName:"tr",align:null},"BIG number multiplier")))),(0,r.yg)("a",{name:"ECP.generator"}),(0,r.yg)("h3",{id:"ecpgenerator"},"ECP.generator()"),(0,r.yg)("p",null,"Set group generator"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,r.yg)("a",{parentName:"p",href:"#ECP"},(0,r.yg)("code",null,"ECP")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"this"),": ",(0,r.yg)("code",null,'{"{"}ECP{"}"}'),"  "),(0,r.yg)("a",{name:"ECP.fromBytes"}),(0,r.yg)("h3",{id:"ecpfrombytesb"},"ECP.fromBytes(b)"),(0,r.yg)("p",null,"convert from byte array to point"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,r.yg)("a",{parentName:"p",href:"#ECP"},(0,r.yg)("code",null,"ECP")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"this"),": ",(0,r.yg)("code",null,'{"{"}ECP{"}"}'),"  "),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Param"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"b"),(0,r.yg)("td",{parentName:"tr",align:null},"input byte array")))),(0,r.yg)("a",{name:"ECP.RHS"}),(0,r.yg)("h3",{id:"ecprhsx"},"ECP.RHS(x)"),(0,r.yg)("p",null,"Calculate RHS of the curve equation"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,r.yg)("a",{parentName:"p",href:"#ECP"},(0,r.yg)("code",null,"ECP")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"this"),": ",(0,r.yg)("code",null,'{"{"}ECP{"}"}'),"  "),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Param"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"x"),(0,r.yg)("td",{parentName:"tr",align:null},"x-value")))))}d.isMDXComponent=!0}}]);