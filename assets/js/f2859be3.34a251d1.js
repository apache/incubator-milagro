"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1255],{5680:(e,t,r)=>{r.d(t,{xA:()=>p,yg:()=>m});var a=r(6540);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function n(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,a,i=function(e,t){if(null==e)return{};var r,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=a.createContext({}),u=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):n(n({},t),e)),r},p=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},s="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},b=a.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),s=u(r),b=i,m=s["".concat(l,".").concat(b)]||s[b]||g[b]||o;return r?a.createElement(m,n(n({ref:t},p),{},{components:r})):a.createElement(m,n({ref:t},p))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,n=new Array(o);n[0]=b;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[s]="string"==typeof e?e:i,n[1]=c;for(var u=2;u<o;u++)n[u]=r[u];return a.createElement.apply(null,n)}return a.createElement.apply(null,r)}b.displayName="MDXCreateElement"},4472:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>c,metadata:()=>u,toc:()=>s});var a=r(8168),i=r(8587),o=(r(6540),r(5680)),n=["components"],c={id:"contributor-guide",title:"Contributor's Guide",sidebar_label:"Contributor's Guide"},l="Become a contributor",u={unversionedId:"contributor-guide",id:"contributor-guide",title:"Contributor's Guide",description:"Apache Milagro Mailing List",source:"@site/../docs/contributor-guide.md",sourceDirName:".",slug:"/contributor-guide",permalink:"/docs/contributor-guide",draft:!1,tags:[],version:"current",frontMatter:{id:"contributor-guide",title:"Contributor's Guide",sidebar_label:"Contributor's Guide"},sidebar:"docs",previous:{title:"ZKP-MFA API",permalink:"/docs/zkp-mfa-api"},next:{title:"Downloads",permalink:"/docs/downloads"}},p={},s=[{value:"Apache Milagro Mailing List",id:"apache-milagro-mailing-list",level:2},{value:"Repositories",id:"repositories",level:2}],g={toc:s},b="wrapper";function m(e){var t=e.components,r=(0,i.A)(e,n);return(0,o.yg)(b,(0,a.A)({},g,r,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"become-a-contributor"},"Become a contributor"),(0,o.yg)("h2",{id:"apache-milagro-mailing-list"},"Apache Milagro Mailing List"),(0,o.yg)("p",null,"If you'd like to contribute, the first step is to subscribe to our developer's mailing list. Please send an email to:"),(0,o.yg)("a",{href:"mailto:dev-subscribe@milagro.apache.org?Subject=Subscribe",target:"_top"},"dev-subscribe @ milagro.apache.org"),(0,o.yg)("h2",{id:"repositories"},"Repositories"),(0,o.yg)("p",null,"Our current GitHub repositories are:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://github.com/apache/incubator-milagro"},"https://github.com/apache/incubator-milagro")," - used to build this website.   "),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://github.com/apache/incubator-milagro-crypto-c"},"https://github.com/apache/incubator-milagro-crypto-c")," - standards compliant cryptographic library written in C.   "),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://github.com/apache/incubator-milagro-MPC"},"https://github.com/apache/incubator-milagro-MPC")," - Multi-Party Computation library (libmpc).   "),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://github.com/apache/incubator-milagro-crypto-js"},"https://github.com/apache/incubator-milagro-crypto-js")," - standards compliant cryptographic library written in JavaScript.   "),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://github.com/apache/incubator-milagro-crypto-rust"},"https://github.com/apache/incubator-milagro-crypto-rust")," - standards compliant cryptographic library written in Rust.   "),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://github.com/apache/incubator-milagro-dta"},"https://github.com/apache/incubator-milagro-dta")," - Milagro Decentralized Trust Authority (D-TA) - a collaborative key management server.     ")),(0,o.yg)("p",null,'Please use the "Issues" tab on these repos to report any bugs or feature requests.'))}m.isMDXComponent=!0}}]);