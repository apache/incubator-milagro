"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3905],{5680:(e,a,n)=>{n.d(a,{xA:()=>i,yg:()=>s});var t=n(6540);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function l(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function p(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?l(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function g(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},l=Object.keys(e);for(t=0;t<l.length;t++)n=l[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)n=l[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var y=t.createContext({}),o=function(e){var a=t.useContext(y),n=a;return e&&(n="function"==typeof e?e(a):p(p({},a),e)),n},i=function(e){var a=o(e.components);return t.createElement(y.Provider,{value:a},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},d=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,l=e.originalType,y=e.parentName,i=g(e,["components","mdxType","originalType","parentName"]),m=o(n),d=r,s=m["".concat(y,".").concat(d)]||m[d]||u[d]||l;return n?t.createElement(s,p(p({ref:a},i),{},{components:n})):t.createElement(s,p({ref:a},i))}));function s(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=n.length,p=new Array(l);p[0]=d;var g={};for(var y in a)hasOwnProperty.call(a,y)&&(g[y]=a[y]);g.originalType=e,g[m]="string"==typeof e?e:r,p[1]=g;for(var o=2;o<l;o++)p[o]=n[o];return t.createElement.apply(null,p)}return t.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1005:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>i,contentTitle:()=>y,default:()=>s,frontMatter:()=>g,metadata:()=>o,toc:()=>m});var t=n(8168),r=n(8587),l=(n(6540),n(5680)),p=["components"],g={id:"fp",title:"FP",sidebar_label:"FP"},y=void 0,o={unversionedId:"cryptojs/fp",id:"cryptojs/fp",title:"FP",description:"FP",source:"@site/../docs/cryptojs/fp.md",sourceDirName:"cryptojs",slug:"/cryptojs/fp",permalink:"/docs/cryptojs/fp",draft:!1,tags:[],version:"current",frontMatter:{id:"fp",title:"FP",sidebar_label:"FP"},sidebar:"docs",previous:{title:"FF",permalink:"/docs/cryptojs/ff"},next:{title:"FP2",permalink:"/docs/cryptojs/fp2"}},i={},m=[{value:"FP",id:"fp",level:2},{value:"new FP(x)",id:"new-fpx",level:3},{value:"fP.zero()",id:"fpzero",level:3},{value:"fP.rcopy(x)",id:"fprcopyx",level:3},{value:"fP.bcopy(x)",id:"fpbcopyx",level:3},{value:"fP.copy(x)",id:"fpcopyx",level:3},{value:"fP.cswap()",id:"fpcswap",level:3},{value:"fP.cmove(g, d)",id:"fpcmoveg-d",level:3},{value:"fP.nres()",id:"fpnres",level:3},{value:"fP.redc()",id:"fpredc",level:3},{value:"fP.toString()",id:"fptostring",level:3},{value:"fP.iszilch()",id:"fpiszilch",level:3},{value:"fP.reduce()",id:"fpreduce",level:3},{value:"fP.one()",id:"fpone",level:3},{value:"fP.norm()",id:"fpnorm",level:3},{value:"fP.mul(b)",id:"fpmulb",level:3},{value:"fP.imul(s)",id:"fpimuls",level:3},{value:"fP.sqr()",id:"fpsqr",level:3},{value:"fP.neg(x)",id:"fpnegx",level:3},{value:"fP.sub(x)",id:"fpsubx",level:3},{value:"fP.div2()",id:"fpdiv2",level:3},{value:"fP.fpow()",id:"fpfpow",level:3},{value:"fP.inverse()",id:"fpinverse",level:3},{value:"fP.equals(x)",id:"fpequalsx",level:3},{value:"fP.pow(e)",id:"fppowe",level:3},{value:"fP.jacobi()",id:"fpjacobi",level:3},{value:"fP.sqrt()",id:"fpsqrt",level:3},{value:"FP.mod()",id:"fpmod",level:3}],u={toc:m},d="wrapper";function s(e){var a=e.components,n=(0,r.A)(e,p);return(0,l.yg)(d,(0,t.A)({},u,n,{components:a,mdxType:"MDXLayout"}),(0,l.yg)("a",{name:"FP"}),(0,l.yg)("h2",{id:"fp"},"FP"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": global class",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}FP{"}"}'),"  "),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#FP"},"FP"),(0,l.yg)("ul",{parentName:"li"},(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#new_FP_new"},"new FP(x)")),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("em",{parentName:"li"},"instance"),(0,l.yg)("ul",{parentName:"li"},(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#FP+zero"},".zero()")),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#FP+rcopy"},".rcopy(x)")),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#FP+bcopy"},".bcopy(x)")),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#FP+copy"},".copy(x)")),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#FP+cswap"},".cswap()")),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#FP+cmove"},".cmove(g, d)")),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#FP+nres"},".nres()")),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#FP+redc"},".redc()")),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#FP+toString"},".toString()")),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#FP+iszilch"},".iszilch()")),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#FP+reduce"},".reduce()")),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#FP+one"},".one()")),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#FP+norm"},".norm()")),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#FP+mul"},".mul(b)")),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#FP+imul"},".imul(s)")),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#FP+sqr"},".sqr()")),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#FP+neg"},".neg(x)")),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#FP+sub"},".sub(x)")),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#FP+div2"},".div2()")),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#FP+fpow"},".fpow()")),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#FP+inverse"},".inverse()")),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#FP+equals"},".equals(x)")),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#FP+pow"},".pow(e)")),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#FP+jacobi"},".jacobi()")),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#FP+sqrt"},".sqrt()")))),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("em",{parentName:"li"},"static"),(0,l.yg)("ul",{parentName:"li"},(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#FP.mod"},".mod()"))))))),(0,l.yg)("a",{name:"new_FP_new"}),(0,l.yg)("h3",{id:"new-fpx"},"new FP(x)"),(0,l.yg)("p",null,"Creates an instance of FP."),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"x"),(0,l.yg)("td",{parentName:"tr",align:null},"FP / BIG instance")))),(0,l.yg)("a",{name:"FP+zero"}),(0,l.yg)("h3",{id:"fpzero"},"fP.zero()"),(0,l.yg)("p",null,"Set FP to zero"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,l.yg)("a",{parentName:"p",href:"#FP"},(0,l.yg)("code",null,"FP")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}FP{"}"}'),"  "),(0,l.yg)("a",{name:"FP+rcopy"}),(0,l.yg)("h3",{id:"fprcopyx"},"fP.rcopy(x)"),(0,l.yg)("p",null,"copy from a ctx.BIG in ROM"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,l.yg)("a",{parentName:"p",href:"#FP"},(0,l.yg)("code",null,"FP")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}FP{"}"}'),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"x"),(0,l.yg)("td",{parentName:"tr",align:null},"FP instance to be copied")))),(0,l.yg)("a",{name:"FP+bcopy"}),(0,l.yg)("h3",{id:"fpbcopyx"},"fP.bcopy(x)"),(0,l.yg)("p",null,"copy from another ctx.BIG"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,l.yg)("a",{parentName:"p",href:"#FP"},(0,l.yg)("code",null,"FP")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}FP{"}"}'),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"x"),(0,l.yg)("td",{parentName:"tr",align:null},"FP instance to be copied")))),(0,l.yg)("a",{name:"FP+copy"}),(0,l.yg)("h3",{id:"fpcopyx"},"fP.copy(x)"),(0,l.yg)("p",null,"Copy FP to another FP"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,l.yg)("a",{parentName:"p",href:"#FP"},(0,l.yg)("code",null,"FP")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}FP{"}"}'),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"x"),(0,l.yg)("td",{parentName:"tr",align:null},"FP instance to be copied")))),(0,l.yg)("a",{name:"FP+cswap"}),(0,l.yg)("h3",{id:"fpcswap"},"fP.cswap()"),(0,l.yg)("p",null,"Conditional constant time swap of two FP numbers"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,l.yg)("a",{parentName:"p",href:"#FP"},(0,l.yg)("code",null,"FP")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}BIG{"}"}'),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Parameter"),": b FP number",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Parameter"),": d Integer  "),(0,l.yg)("a",{name:"FP+cmove"}),(0,l.yg)("h3",{id:"fpcmoveg-d"},"fP.cmove(g, d)"),(0,l.yg)("p",null,"Conditional copy of FP number"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,l.yg)("a",{parentName:"p",href:"#FP"},(0,l.yg)("code",null,"FP")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}FP{"}"}'),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"g"),(0,l.yg)("td",{parentName:"tr",align:null},"FP instance")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"d"),(0,l.yg)("td",{parentName:"tr",align:null},"copy depends on this value")))),(0,l.yg)("a",{name:"FP+nres"}),(0,l.yg)("h3",{id:"fpnres"},"fP.nres()"),(0,l.yg)("p",null,"Converts from BIG integer to residue form mod Modulus"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,l.yg)("a",{parentName:"p",href:"#FP"},(0,l.yg)("code",null,"FP")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}FP{"}"}'),"  "),(0,l.yg)("a",{name:"FP+redc"}),(0,l.yg)("h3",{id:"fpredc"},"fP.redc()"),(0,l.yg)("p",null,"Converts from residue form back to BIG integer form"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,l.yg)("a",{parentName:"p",href:"#FP"},(0,l.yg)("code",null,"FP")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}FP{"}"}'),"  "),(0,l.yg)("a",{name:"FP+toString"}),(0,l.yg)("h3",{id:"fptostring"},"fP.toString()"),(0,l.yg)("p",null,"convert to hex string"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,l.yg)("a",{parentName:"p",href:"#FP"},(0,l.yg)("code",null,"FP")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}FP{"}"}'),"  "),(0,l.yg)("a",{name:"FP+iszilch"}),(0,l.yg)("h3",{id:"fpiszilch"},"fP.iszilch()"),(0,l.yg)("p",null,"Tests for FP equal to zero"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,l.yg)("a",{parentName:"p",href:"#FP"},(0,l.yg)("code",null,"FP")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}FP{"}"}'),"  "),(0,l.yg)("a",{name:"FP+reduce"}),(0,l.yg)("h3",{id:"fpreduce"},"fP.reduce()"),(0,l.yg)("p",null,"Reduces all components of possibly unreduced FP mod Modulus"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,l.yg)("a",{parentName:"p",href:"#FP"},(0,l.yg)("code",null,"FP")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}FP{"}"}'),"  "),(0,l.yg)("a",{name:"FP+one"}),(0,l.yg)("h3",{id:"fpone"},"fP.one()"),(0,l.yg)("p",null,"Set FP to unity"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,l.yg)("a",{parentName:"p",href:"#FP"},(0,l.yg)("code",null,"FP")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}FP{"}"}'),"  "),(0,l.yg)("a",{name:"FP+norm"}),(0,l.yg)("h3",{id:"fpnorm"},"fP.norm()"),(0,l.yg)("p",null,"Normalises the components of an FP"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,l.yg)("a",{parentName:"p",href:"#FP"},(0,l.yg)("code",null,"FP")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}FP{"}"}'),"  "),(0,l.yg)("a",{name:"FP+mul"}),(0,l.yg)("h3",{id:"fpmulb"},"fP.mul(b)"),(0,l.yg)("p",null,"Fast Modular multiplication of two FPs, mod Modulus"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,l.yg)("a",{parentName:"p",href:"#FP"},(0,l.yg)("code",null,"FP")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}FP{"}"}'),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"b"),(0,l.yg)("td",{parentName:"tr",align:null},"FP number, the multiplier")))),(0,l.yg)("a",{name:"FP+imul"}),(0,l.yg)("h3",{id:"fpimuls"},"fP.imul(s)"),(0,l.yg)("p",null,"Multiplication of an FP by a small integer"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,l.yg)("a",{parentName:"p",href:"#FP"},(0,l.yg)("code",null,"FP")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}FP{"}"}'),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"s"),(0,l.yg)("td",{parentName:"tr",align:null},"integer")))),(0,l.yg)("a",{name:"FP+sqr"}),(0,l.yg)("h3",{id:"fpsqr"},"fP.sqr()"),(0,l.yg)("p",null,"Fast Squaring of an FP"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,l.yg)("a",{parentName:"p",href:"#FP"},(0,l.yg)("code",null,"FP")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}FP{"}"}'),"  "),(0,l.yg)("a",{name:"FP+neg"}),(0,l.yg)("h3",{id:"fpnegx"},"fP.neg(x)"),(0,l.yg)("p",null,"negate this"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,l.yg)("a",{parentName:"p",href:"#FP"},(0,l.yg)("code",null,"FP")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}FP{"}"}'),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"x"),(0,l.yg)("td",{parentName:"tr",align:null},"FP instance to be set to one")))),(0,l.yg)("a",{name:"FP+sub"}),(0,l.yg)("h3",{id:"fpsubx"},"fP.sub(x)"),(0,l.yg)("p",null,"subtraction of two FPs"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,l.yg)("a",{parentName:"p",href:"#FP"},(0,l.yg)("code",null,"FP")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}FP{"}"}'),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"x"),(0,l.yg)("td",{parentName:"tr",align:null},"FP instance")))),(0,l.yg)("a",{name:"FP+div2"}),(0,l.yg)("h3",{id:"fpdiv2"},"fP.div2()"),(0,l.yg)("p",null,"Divide an FP by 2"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,l.yg)("a",{parentName:"p",href:"#FP"},(0,l.yg)("code",null,"FP")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}FP{"}"}'),"  "),(0,l.yg)("a",{name:"FP+fpow"}),(0,l.yg)("h3",{id:"fpfpow"},"fP.fpow()"),(0,l.yg)("p",null,"return this^(p-3)/4 or this^(p-5)/8"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,l.yg)("a",{parentName:"p",href:"#FP"},(0,l.yg)("code",null,"FP")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}FP{"}"}'),"  "),(0,l.yg)("a",{name:"FP+inverse"}),(0,l.yg)("h3",{id:"fpinverse"},"fP.inverse()"),(0,l.yg)("p",null,"Inverting an FP"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,l.yg)("a",{parentName:"p",href:"#FP"},(0,l.yg)("code",null,"FP")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}FP{"}"}'),"  "),(0,l.yg)("a",{name:"FP+equals"}),(0,l.yg)("h3",{id:"fpequalsx"},"fP.equals(x)"),(0,l.yg)("p",null,"Tests for equality of two FP instances"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,l.yg)("a",{parentName:"p",href:"#FP"},(0,l.yg)("code",null,"FP")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}FP{"}"}'),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"x"),(0,l.yg)("td",{parentName:"tr",align:null},"FP instance to compare")))),(0,l.yg)("a",{name:"FP+pow"}),(0,l.yg)("h3",{id:"fppowe"},"fP.pow(e)"),(0,l.yg)("p",null,"Raises an FP to the power of a BIG"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,l.yg)("a",{parentName:"p",href:"#FP"},(0,l.yg)("code",null,"FP")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}FP{"}"}'),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Param"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"e"),(0,l.yg)("td",{parentName:"tr",align:null},"BIG instance exponent")))),(0,l.yg)("a",{name:"FP+jacobi"}),(0,l.yg)("h3",{id:"fpjacobi"},"fP.jacobi()"),(0,l.yg)("p",null,"return jacobi symbol (this/Modulus)"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,l.yg)("a",{parentName:"p",href:"#FP"},(0,l.yg)("code",null,"FP")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}FP{"}"}'),"  "),(0,l.yg)("a",{name:"FP+sqrt"}),(0,l.yg)("h3",{id:"fpsqrt"},"fP.sqrt()"),(0,l.yg)("p",null,"Fast Modular square root of a an FP, mod Modulus"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,l.yg)("a",{parentName:"p",href:"#FP"},(0,l.yg)("code",null,"FP")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}FP{"}"}'),"  "),(0,l.yg)("a",{name:"FP.mod"}),(0,l.yg)("h3",{id:"fpmod"},"FP.mod()"),(0,l.yg)("p",null,'reduce a ctx.DBIG to a ctx.BIG using a "special" modulus'),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.yg)("a",{parentName:"p",href:"#FP"},(0,l.yg)("code",null,"FP")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"this"),": ",(0,l.yg)("code",null,'{"{"}FP{"}"}')))}s.isMDXComponent=!0}}]);